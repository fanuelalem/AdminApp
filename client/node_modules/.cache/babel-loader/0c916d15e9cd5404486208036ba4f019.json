{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid, Divider, Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index';\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport UserTodoListItems from './userWatchListItem'; // import requireAuth from '../../hoc/requireAuth';\n\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { ADD_TODO_ERROR, ADD_TODO } from '../../actions/types';\n\nclass UserTodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.onSubmit = async dispatch => {\n      try {\n        await axios.post('/api/user/stock', {\n          title: this.state.title\n        }, {\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_TODO\n        });\n        this.props.getUserTodos();\n      } catch (e) {\n        dispatch({\n          type: ADD_TODO_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.addWinnerStock = () => {\n      alert('hello');\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserTodos();\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, 'body { background-color: #532f8c; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '100px 40px 0px 40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      content: \"My Watchlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"text\",\n      component: this.renderAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fluid: true,\n      color: \"purple\",\n      content: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      divided: true,\n      selection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UserTodoListItems, {\n      todos: this.props.todos.slice(this.state.start, this.state.end),\n      handleUpdate: this.props.updateTodoCompletedById,\n      handleDelete: this.props.deleteTodoById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    })), this.props.todos.length <= 9 ? null : /*#__PURE__*/React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      totalPages: Math.ceil(this.props.todos.length / 10),\n      onPageChange: (event, data) => this.handlePageChange(event, data),\n      activePage: this.state.activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }))))));\n  } //     const { handleSubmit } = this.props;\n  //     console.log(this.props);\n  //     return (\n  //       <>\n  //         <Header as='h2' color='teal' textAlign='center' content='Welcome to do the todo app'/>\n  //         <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n  //           <Segment stacked>\n  //             <Field\n  //               name='text'\n  //               component={this.renderAddTodo}\n  //             />\n  //             <Button\n  //               type='submit'\n  //               fluid\n  //               color='teal'\n  //               content='Add a todo'\n  //             />\n  //           </Segment>\n  //         </Form>\n  //         <List animated divided selection>\n  //           <UserTodoListItems\n  //             todos={this.props.todos.slice(this.state.start, this.state.end)}\n  //             handleUpdate={this.props.updateTodoCompletedById}\n  //             handleDelete={this.props.deleteTodoById}/>\n  //         </List>\n  //         {\n  //           this.props.todos.length <= 9 ?\n  //             null\n  //             : <Pagination\n  //               totalPages={ Math.ceil( this.props.todos.length / 10) }\n  //               onPageChange={ (event, data) =>  this.handlePageChange(event, data) }\n  //               activePage={this.state.activePage}\n  //             />\n  //         }\n  //       </>\n  //     );\n  //   }\n  // }\n  // // function mapStateToProps(state) {\n  // //   return {\n  // //     todos: state.todos.userTodos,\n  // //     clientError: state.todos.getUserTodosClientError,\n  // //     serverError: state.todos.getUserTodosServerError\n  // //   };\n  // // }\n  // function mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  //   return {\n  //     todos: userTodos,\n  //     clientError: getUserTodosClientError,\n  //     serverError: getUserTodosServerError,\n  //     deleteTodoByIdError,\n  //   };\n  // }\n  // // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n  // // 1 way\n  // // export default reduxForm({ form: 'addTodo' })(connect(mapStateToProps, { getUserTodos })(UserTodoList));\n  // // 2nd way\n  // // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n  // // export default reduxForm({ form: 'addTodo'})(composedComponent);\n  // export default compose(\n  //   reduxForm({ form: 'addTodo' }),\n  //   requireAuth,\n  //   connect(mapStateToProps, { getUserTodos, updateTodoCompletedById, deleteTodoById })\n  // )(UserTodoList);\n\n\n}\n\nfunction mapStateToProps({\n  todos: {\n    userTodos,\n    getUserTodosServerError,\n    getUserTodosClientError,\n    deleteTodoByIdError\n  }\n}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserTodos,\n  updateTodoCompletedById,\n  deleteTodoById\n}))(UserTodoList); // import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n//   state={\n//     title:'',\n//    }\n// doSomething = () => {\n//   alert('ed')\n// }\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n//   render() {\n// console.log(this.state,'l')\n//     return (\n//         <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n//           {standardName} [{ticker}]\n//           </span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//       </Table.Body>\n//     </Table>\n// </div>\n//       </div>\n//     )\n//   }\n// }\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//      </Table.Body>\n//     </Table>\n//     </div>\n//   </div>\n// );\n// export default WinnerListItems;\n// ticker,changes,price,\n// changesPercentage,companyName","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js"],"names":["React","Component","reduxForm","Field","connect","Grid","Divider","Header","Form","Segment","Message","List","Pagination","Button","Icon","FormContainer","compose","Helmet","axios","UserTodoListItems","getUserTodos","updateTodoCompletedById","deleteTodoById","ADD_TODO_ERROR","ADD_TODO","UserTodoList","state","title","onSubmit","dispatch","post","headers","localStorage","getItem","type","props","e","payload","addWinnerStock","alert","componentDidMount","render","handleSubmit","margin","renderAddTodo","todos","slice","start","end","length","Math","ceil","event","data","handlePageChange","activePage","mapStateToProps","userTodos","getUserTodosServerError","getUserTodosClientError","deleteTodoByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid,Divider,Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index'\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport UserTodoListItems from './userWatchListItem';\n\n// import requireAuth from '../../hoc/requireAuth';\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { ADD_TODO_ERROR, ADD_TODO} from '../../actions/types';\n\nclass UserTodoList extends Component {\n\n  state={\n    title:'',\n   }\n\n\n \n\n  onSubmit = async (dispatch) => {\n     try {\n      await axios.post('/api/user/stock', {title:this.state.title}, { headers: { 'authorization': localStorage.getItem('token')}} );\n      dispatch({ type: ADD_TODO });\n      this.props.getUserTodos();\n    } catch (e) {\n      dispatch({ type: ADD_TODO_ERROR, payload: e });\n    }\n  }\n\naddWinnerStock = () => {\n  alert('hello')\n}\n \n\n  componentDidMount() {\n     this.props.getUserTodos();\n   }\n\n  \n\n \n\n  render() {\n     const {handleSubmit} = this.props;\n      return(\n          <>\n<Helmet>\n   <style>{'body { background-color: #532f8c; }'}</style>\n\n         </Helmet>\n              <div style={{margin:'100px 40px 0px 40px'}}>\n\n \n<Segment    >\n    <Grid columns={2} relaxed='very'>\n      <Grid.Column >\n\n     \n      <FormContainer/>   \n \n\n\n     </Grid.Column>\n      <Grid.Column> \n          \n\n\n\n       <Header as=\"h2\"  textAlign=\"center\" content=\"My Watchlist\"/>\n          <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n              <Segment  >\n                <Field\n                name=\"text\"\n                component={this.renderAddTodo}\n                />\n                <Button\n                type='submit'\n                fluid\n                color='purple'\n                content='add'\n                />\n              </Segment>\n              </Form>\n              <List animated divided selection>\n                <UserTodoListItems \n                todos={this.props.todos.slice(this.state.start,this.state.end)}\n                handleUpdate={this.props.updateTodoCompletedById}\n                handleDelete={this.props.deleteTodoById}\n                />\n              </List>\n              {\n                this.props.todos.length <= 9 ? \n                null\n                : <Pagination\n                pointing\n                secondary\n                totalPages={Math.ceil(this.props.todos.length / 10)}\n                onPageChange={(event,data)=> this.handlePageChange(event,data)}\n                activePage={this.state.activePage}\n                />\n              }       \n\n              </Grid.Column>\n    </Grid>\n\n    \n  </Segment>\n  </div>\n\n          </>\n      );\n  }\n//     const { handleSubmit } = this.props;\n//     console.log(this.props);\n//     return (\n//       <>\n//         <Header as='h2' color='teal' textAlign='center' content='Welcome to do the todo app'/>\n//         <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n//           <Segment stacked>\n//             <Field\n//               name='text'\n//               component={this.renderAddTodo}\n//             />\n//             <Button\n//               type='submit'\n//               fluid\n//               color='teal'\n//               content='Add a todo'\n//             />\n//           </Segment>\n//         </Form>\n//         <List animated divided selection>\n//           <UserTodoListItems\n//             todos={this.props.todos.slice(this.state.start, this.state.end)}\n//             handleUpdate={this.props.updateTodoCompletedById}\n//             handleDelete={this.props.deleteTodoById}/>\n//         </List>\n//         {\n//           this.props.todos.length <= 9 ?\n//             null\n//             : <Pagination\n//               totalPages={ Math.ceil( this.props.todos.length / 10) }\n//               onPageChange={ (event, data) =>  this.handlePageChange(event, data) }\n//               activePage={this.state.activePage}\n//             />\n//         }\n//       </>\n//     );\n//   }\n// }\n\n// // function mapStateToProps(state) {\n// //   return {\n// //     todos: state.todos.userTodos,\n// //     clientError: state.todos.getUserTodosClientError,\n// //     serverError: state.todos.getUserTodosServerError\n// //   };\n// // }\n\n\n// function mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n//   return {\n//     todos: userTodos,\n//     clientError: getUserTodosClientError,\n//     serverError: getUserTodosServerError,\n//     deleteTodoByIdError,\n//   };\n// }\n\n// // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n\n\n// // 1 way\n// // export default reduxForm({ form: 'addTodo' })(connect(mapStateToProps, { getUserTodos })(UserTodoList));\n\n// // 2nd way\n// // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n// // export default reduxForm({ form: 'addTodo'})(composedComponent);\n\n\n// export default compose(\n//   reduxForm({ form: 'addTodo' }),\n//   requireAuth,\n//   connect(mapStateToProps, { getUserTodos, updateTodoCompletedById, deleteTodoById })\n// )(UserTodoList);\n\n}\n\nfunction mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError,\n  };\n}\n export default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, { getUserTodos,updateTodoCompletedById, deleteTodoById })\n)(UserTodoList);\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n \n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n \n\n//   state={\n//     title:'',\n//    }\n\n// doSomething = () => {\n//   alert('ed')\n// }\n\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n \n\n//   render() {\n// console.log(this.state,'l')\n//     return (\n      \n//         <div>\n\n\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n    \n\n\n\n\n\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n          \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n\n//           {standardName} [{ticker}]\n          \n//           </span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n\n      \n\n//   ))}\n//       </Table.Body>\n//     </Table>\n \n  \n// </div>\n//       </div>\n//     )\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n\n\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n//   ))}\n     \n//      </Table.Body>\n//     </Table>\n \n  \n//     </div>\n\n//   </div>\n// );\n\n// export default WinnerListItems;\n\n\n// ticker,changes,price,\n// changesPercentage,companyName"]},"metadata":{},"sourceType":"module"}