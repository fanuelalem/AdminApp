{"ast":null,"code":"// import React, { Component } from 'react';\n// import { List, Header, Message,Button,Image,Pagination,Container,Grid,Responsive,Card,Icon } from 'semantic-ui-react';\n// // Message third paramater\n// import { Link } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { getAllStocks,getUserStocks } from '../../actions/stocks';\n// // import {renderList} from './../rendernewList'\n// // import moment from 'moment';\n// import DeleteTodoModal from './../../components/DeleteModal';\n// import { Table } from 'semantic-ui-react'\n// // import { getUserData, getOtherUsers } from '../../actions/profile';\n// import axios from 'axios'\n// import FormContainer from './../searchForm/formContainer/index'\n// import moment from 'moment'\n// import { Helmet } from 'react-helmet';\n// class AllTodosList extends Component {\n//   state={\n//     activePage:1,\n//     start:0,\n//     end:10,\n//     userData:'',\n//     filteredUsers:[]\n//   }\n//   componentDidMount() {\n//      this.getOtherUsers()\n//      this.getUserData()\n//      this.props.getAllStocks();\n//     this.props.getUserStocks();\n//   }\n//    getUserData = () => {\n//     axios.get('/api/user/profile', {\n//       headers: { authorization: localStorage.getItem('token') },\n//     }).then((response)=>{\n//       // console.log(response.data.myStocks[0].text,'user response')\n//       this.setState({userData:response.data},()=>{\n//         console.log(response.data,'sdcs')\n//       })\n//     })\n//  }\n//    getOtherUsers = () => {\n//    axios.get('/api/user/profiles', {\n//     headers: { authorization: localStorage.getItem('token') },\n//   }).then((response)=>{\n//     this.setState({filteredUsers:response.data},()=>{\n//       console.log(response.data)\n//     })\n//    })\n//  };\n//   handlePageChange = (event, data) => {\n//     console.log(data)\n//     this.setState({\n//       activePage: data.activePage,\n//       start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n//       end: data.activePage * 10\n//     });\n//   }\n//   renderList = () => {\n//   // console.log(this.props.allTodos.length,'ed')\n//     return(\n// <div>\n//       <div style={{margin:'70px 25px 25px 25px'}}>\n//   <Grid  >\n//     <Grid.Row>\n//       <Grid.Column >\n//        </Grid.Column>\n//       <Grid.Column width={14} className='customScroll'>\n//        {console.log(this.state.filteredUsers,'filtered users')}\n//       {  this.state.filteredUsers.map((item)=>(\n//          <div style={{margin:'0 0 20px 0'}}>\n//      <div>\n//     <Card fluid style={{border:\"none\"}} >\n//     <Card.Content>\n//       <Image\n//          floated='left'\n//         size='mini'\n//         src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n//       />\n//       <Card.Header>\n//         <h1 style={{textAlign:'center'}}> {item.email}</h1> \n//        </Card.Header>\n//     {/* <Card.Meta>{item.email} has {item.myStocks.length} stocks...</Card.Meta> */}\n//     </Card.Content>\n//     <Card.Content extra>\n//     <Table   selectable    >\n//   <Table.Header>\n//     <Table.Row>\n//        <Table.HeaderCell style={{color:'black'}}>Recent</Table.HeaderCell>\n//       <Table.HeaderCell style={{color:'black'}}>Date</Table.HeaderCell>\n//     </Table.Row>\n//   </Table.Header>\n//   <Table.Body>\n//     <Table.Row  >\n//       <Table.Cell > <p style={{color:'black'}}> { }</p></Table.Cell>\n//      <Table.Cell> <p>datecreated </p>  </Table.Cell>\n//      </Table.Row>\n//   </Table.Body>\n//  </Table>     \n//      </Card.Content>\n//      </Card>      \n//   </div>\n//          </div>\n//       ))}\n//     </Grid.Column>\n//     </Grid.Row>\n//     </Grid>\n//    </div>\n//    </div>\n//     )\n//   };\n//   render() {\n//       return (\n//       <div>\n//        <List celled selection size='huge'>\n//         {this.props.getAllStockError ? <Message negative header={this.props.getAllStockError}/> : null}\n//       { this.renderList() }\n//        </List>\n//        {this.props.allStocks.length <= 9 ? \n// null     \n// :\n// <Pagination\n//                 pointing\n//                 secondary\n//                 totalPages={Math.ceil(this.props.allStocks.length / 10)}\n//                 onPageChange={(event,data)=> this.handlePageChange(event,data)}\n//                 activePage={this.state.activePage}\n//                 />\n//               }\n//        </div>\n//     );\n//   }\n// }\n// function mapStateToProps(state) {\n//   return { allStocks: state.todos.allStocks, getAllStockError: state.todos.getAllStockError };\n// }\n// export default connect(mapStateToProps, { getAllStocks,getUserStocks })(AllTodosList);\n// export default AllTodosList;\n// { this.props.getAllTodosError ? <Message negative header={this.props.getAllTodosError}/> : null }\n// { this.renderList() }\n// folder name = AllTodosList\n// renderList = () => {\n//   console.log(this.props)\n//   if (this.props.allTodos.length === 0) {\n//     return <Header content='No stocks yet'/>;\n//   } else {\n//     return this.props.allTodos.map(({ _id, text, dateCreated}) => {\n//       return (\n//         <List.Item key={_id}>\n//           <List.Content>\n//             <List.Header>{text}</List.Header>\n//             <List.Description>{moment(dateCreated).fromNow()}</List.Description>\n//           </List.Content>\n//         </List.Item>\n//       );\n//     });\n//   }\n// }\n{\n  /* <Responsive>\n       <Card>\n   <Card.Content header='About Amy' >\n   <Card.Header> {this.state.userData.email}</Card.Header>\n   </Card.Content>\n   <Card.Content  ><p> hello world</p></Card.Content>\n   <Card.Content extra>\n  <Button as={Link} to='/watchlist'color='green'>\n  Go to my watchlist\n  </Button>    \n    </Card.Content>\n  </Card>\n  </Responsive> */\n}\n{\n  /* <Table singleLine inverted selectable>\n  <Table.Header>\n   <Table.Row>\n   <Table.HeaderCell>Stock Name</Table.HeaderCell>\n     <Table.HeaderCell>Date</Table.HeaderCell>\n    \n   </Table.Row>\n  </Table.Header>\n  <Table.Body>\n  {this.props.allTodos.map(({_id,text,dateCreated,name})=>(\n  <Table.Row key={_id}>\n    <Table.Cell> <h3>{text}</h3></Table.Cell>\n    <Table.Cell>{moment(dateCreated).fromNow()}</Table.Cell>\n       </Table.Row>\n  ))}\n        </Table.Body>\n  </Table> */\n}","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/popular/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAGA;AAMA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AAGA;AAQA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAMA;AACA;AACA;AAGA;AAQA;AAOA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAGA;AAIE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAC;;;;;;;;;;;;;AAegB;AAGb;AAAC;;;;;;;;;;;;;;;;;AAkBU","sourcesContent":["// import React, { Component } from 'react';\n// import { List, Header, Message,Button,Image,Pagination,Container,Grid,Responsive,Card,Icon } from 'semantic-ui-react';\n// // Message third paramater\n// import { Link } from 'react-router-dom';\n\n// import { connect } from 'react-redux';\n// import { getAllStocks,getUserStocks } from '../../actions/stocks';\n// // import {renderList} from './../rendernewList'\n// // import moment from 'moment';\n// import DeleteTodoModal from './../../components/DeleteModal';\n// import { Table } from 'semantic-ui-react'\n// // import { getUserData, getOtherUsers } from '../../actions/profile';\n// import axios from 'axios'\n// import FormContainer from './../searchForm/formContainer/index'\n// import moment from 'moment'\n// import { Helmet } from 'react-helmet';\n\n\n// class AllTodosList extends Component {\n//   state={\n//     activePage:1,\n//     start:0,\n//     end:10,\n//     userData:'',\n//     filteredUsers:[]\n\n//   }\n  \n\n//   componentDidMount() {\n\n \n//      this.getOtherUsers()\n//      this.getUserData()\n//      this.props.getAllStocks();\n//     this.props.getUserStocks();\n//   }\n\n\n//    getUserData = () => {\n//     axios.get('/api/user/profile', {\n//       headers: { authorization: localStorage.getItem('token') },\n//     }).then((response)=>{\n//       // console.log(response.data.myStocks[0].text,'user response')\n//       this.setState({userData:response.data},()=>{\n//         console.log(response.data,'sdcs')\n//       })\n\n \n//     })\n\n \n//  }\n \n//    getOtherUsers = () => {\n//    axios.get('/api/user/profiles', {\n//     headers: { authorization: localStorage.getItem('token') },\n//   }).then((response)=>{\n//     this.setState({filteredUsers:response.data},()=>{\n//       console.log(response.data)\n//     })\n//    })\n//  };\n\n  \n\n//   handlePageChange = (event, data) => {\n//     console.log(data)\n//     this.setState({\n//       activePage: data.activePage,\n//       start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n//       end: data.activePage * 10\n//     });\n//   }\n\n \n//   renderList = () => {\n     \n//   // console.log(this.props.allTodos.length,'ed')\n//     return(\n// <div>\n\n      \n//       <div style={{margin:'70px 25px 25px 25px'}}>\n\n  \n  \n  \n\n//   <Grid  >\n//     <Grid.Row>\n//       <Grid.Column >\n \n \n\n//        </Grid.Column>\n//       <Grid.Column width={14} className='customScroll'>\n\n//        {console.log(this.state.filteredUsers,'filtered users')}\n \n//       {  this.state.filteredUsers.map((item)=>(\n\n\n//          <div style={{margin:'0 0 20px 0'}}>\n\n \n \n\n\n  \n\n//      <div>\n\n   \n//     <Card fluid style={{border:\"none\"}} >\n\n//     <Card.Content>\n//       <Image\n//          floated='left'\n//         size='mini'\n//         src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n//       />\n//       <Card.Header>\n//         <h1 style={{textAlign:'center'}}> {item.email}</h1> \n//        </Card.Header>\n//     {/* <Card.Meta>{item.email} has {item.myStocks.length} stocks...</Card.Meta> */}\n      \n//     </Card.Content>\n//     <Card.Content extra>\n\n//     <Table   selectable    >\n//   <Table.Header>\n//     <Table.Row>\n//        <Table.HeaderCell style={{color:'black'}}>Recent</Table.HeaderCell>\n//       <Table.HeaderCell style={{color:'black'}}>Date</Table.HeaderCell>\n       \n\n     \n//     </Table.Row>\n//   </Table.Header>\n//   <Table.Body>\n   \n\n\n//     <Table.Row  >\n//       <Table.Cell > <p style={{color:'black'}}> { }</p></Table.Cell>\n//      <Table.Cell> <p>datecreated </p>  </Table.Cell>\n    \n\n//      </Table.Row>\n     \n     \n \n\n  \n//   </Table.Body>\n//  </Table>     \n//      </Card.Content>\n\n\n//      </Card>      \n\n     \n\n\n\n \n\n//   </div>\n    \n\n\n \n\n        \n//          </div>\n//       ))}\n       \n    \n//     </Grid.Column>\n//     </Grid.Row>\n//     </Grid>\n   \n  \n//    </div>\n//    </div>\n\n//     )\n//   };\n   \n\n//   render() {\n//       return (\n\n//       <div>\n \n//        <List celled selection size='huge'>\n//         {this.props.getAllStockError ? <Message negative header={this.props.getAllStockError}/> : null}\n//       { this.renderList() }\n\n//        </List>\n\n//        {this.props.allStocks.length <= 9 ? \n// null     \n       \n// :\n// <Pagination\n//                 pointing\n//                 secondary\n//                 totalPages={Math.ceil(this.props.allStocks.length / 10)}\n//                 onPageChange={(event,data)=> this.handlePageChange(event,data)}\n//                 activePage={this.state.activePage}\n//                 />\n              \n//               }\n//        </div>\n\n//     );\n//   }\n// }\n\n// function mapStateToProps(state) {\n//   return { allStocks: state.todos.allStocks, getAllStockError: state.todos.getAllStockError };\n// }\n\n// export default connect(mapStateToProps, { getAllStocks,getUserStocks })(AllTodosList);\n\n// export default AllTodosList;\n\n\n// { this.props.getAllTodosError ? <Message negative header={this.props.getAllTodosError}/> : null }\n// { this.renderList() }\n\n\n// folder name = AllTodosList\n\n\n\n  // renderList = () => {\n  //   console.log(this.props)\n  //   if (this.props.allTodos.length === 0) {\n  //     return <Header content='No stocks yet'/>;\n  //   } else {\n  //     return this.props.allTodos.map(({ _id, text, dateCreated}) => {\n  //       return (\n  //         <List.Item key={_id}>\n  //           <List.Content>\n  //             <List.Header>{text}</List.Header>\n  //             <List.Description>{moment(dateCreated).fromNow()}</List.Description>\n  //           </List.Content>\n  //         </List.Item>\n  //       );\n  //     });\n  //   }\n  // }\n\n\n\n\n \n\n  {/* <Responsive>\n\n       <Card>\n    <Card.Content header='About Amy' >\n    <Card.Header> {this.state.userData.email}</Card.Header>\n    </Card.Content>\n    <Card.Content  ><p> hello world</p></Card.Content>\n    <Card.Content extra>\n\n<Button as={Link} to='/watchlist'color='green'>\n  Go to my watchlist\n  </Button>    \n  \n  </Card.Content>\n  </Card>\n  </Responsive> */}\n\n\n      {/* <Table singleLine inverted selectable>\n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>Stock Name</Table.HeaderCell>\n          <Table.HeaderCell>Date</Table.HeaderCell>\n         \n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n   {this.props.allTodos.map(({_id,text,dateCreated,name})=>(\n     <Table.Row key={_id}>\n         <Table.Cell> <h3>{text}</h3></Table.Cell>\n         <Table.Cell>{moment(dateCreated).fromNow()}</Table.Cell>\n   \n        </Table.Row>\n   ))}\n      \n      </Table.Body>\n     </Table> */}"]},"metadata":{},"sourceType":"module"}