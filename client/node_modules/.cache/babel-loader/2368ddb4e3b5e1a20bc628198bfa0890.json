{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/losers/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, Header, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { increment, decrement } from '../../actions/counter';\nimport axios from 'axios';\nimport LoserListItems from './../LoserListItems'; // import requireAuth from '../../hoc/requireAuth';\n\nclass Losers extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gainer: [],\n      loser: []\n    };\n\n    this.componentDidMount = () => {\n      this.getLosers();\n    };\n\n    this.getLosers = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoserListItems, {\n      losers: this.state.loser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }\n    })));\n  }\n\n} // This takes a key which is what we want the states name to be as props\n// The value is what state we want to pull out from the store\n// function mapStateToProps(state) {\n//   return { counter: state.counter };\n// };\n// 2nd parameter to connect is what actions we want wired up to this component\n// To be sent to all of our reducers\n// export default requireAuth(connect(mapStateToProps, { increment, decrement })(Counter));\n//\n// export default compose(\n//   connect(mapStateToProps, { increment, decrement}),requireAuth)(Counter);\n// export default connect(mapStateToProps,{increment,decrement})(Counter)\n\n\nexport default Losers;","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/losers/index.js"],"names":["React","Component","Grid","Header","Button","connect","compose","increment","decrement","axios","LoserListItems","Losers","state","gainer","loser","componentDidMount","getLosers","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACC,OAAOC,cAAP,MAA2B,qBAA3B,C,CAED;;AAEA,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC/BW,KAD+B,GACzB;AAENC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,KAAK,EAAC;AAHA,KADyB;;AAAA,SAM/BC,iBAN+B,GAMb,MAAI;AACpB,WAAKC,SAAL;AACA,KAR6B;;AAAA,SAS9BA,SAT8B,GASlB,MAAM,CAGhB,CAZ4B;AAAA;;AAc7BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CADF,CADF;AAOD;;AAtB4B,C,CAyB/B;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;;;AACA,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Header, Button } from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { increment, decrement } from '../../actions/counter';\nimport axios from 'axios';\n import LoserListItems from './../LoserListItems';\n\n// import requireAuth from '../../hoc/requireAuth';\n\nclass Losers extends Component {\nstate={\n\ngainer:[],\nloser:[]\n}\ncomponentDidMount=()=>{\n  this.getLosers()\n }\n getLosers = () => {\n    \n\n  }\n\n  render() {\n    return (\n      <Grid centered>\n        <Grid.Column textAlign='center'>\n <LoserListItems losers={this.state.loser}/> \n         </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\n// This takes a key which is what we want the states name to be as props\n// The value is what state we want to pull out from the store\n// function mapStateToProps(state) {\n//   return { counter: state.counter };\n// };\n// 2nd parameter to connect is what actions we want wired up to this component\n// To be sent to all of our reducers\n\n\n\n// export default requireAuth(connect(mapStateToProps, { increment, decrement })(Counter));\n//\n// export default compose(\n//   connect(mapStateToProps, { increment, decrement}),requireAuth)(Counter);\n\n// export default connect(mapStateToProps,{increment,decrement})(Counter)\nexport default Losers"]},"metadata":{},"sourceType":"module"}