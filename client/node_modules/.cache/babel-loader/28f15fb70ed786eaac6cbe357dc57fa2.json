{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = ReactLiveClock;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMoment = require('react-moment');\n\nvar _reactMoment2 = _interopRequireDefault(_reactMoment);\n\nrequire('moment-timezone');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction ReactLiveClock(props) {\n  var timezone = props.timezone,\n      date = props.date,\n      format = props.format,\n      interval = props.interval,\n      ticking = props.ticking,\n      onChange = props.onChange,\n      blinking = props.blinking;\n\n  var _useState = (0, _react.useState)(Date.now()),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTime = _useState2[0],\n      setCurrentTime = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(format),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formatToUse = _useState4[0],\n      setFormatToUse = _useState4[1];\n\n  var colonOn = true;\n\n  function reverseString(str) {\n    var splitString = str.split('');\n    var reverseArray = splitString.reverse();\n    var joinArray = reverseArray.join('');\n    return joinArray;\n  }\n\n  (0, _react.useEffect)(function () {\n    if (ticking || blinking) {\n      var tick = setInterval(function () {\n        var now = Date.now();\n\n        if (blinking) {\n          if (colonOn) {\n            var newFormat = reverseString(format);\n            newFormat = newFormat.replace(':', ' ');\n            newFormat = reverseString(newFormat);\n            colonOn = false;\n            setFormatToUse(newFormat);\n          } else {\n            setFormatToUse(format);\n            colonOn = true;\n          }\n        }\n\n        if (ticking) {\n          setCurrentTime(now);\n        }\n\n        if (typeof onChange === 'function') {\n          onChange(now);\n        }\n      }, interval);\n      return function () {\n        return clearInterval(tick);\n      };\n    }\n\n    return function () {\n      return true;\n    };\n  }, [].concat(_toConsumableArray(props)));\n  return _react2.default.createElement(_reactMoment2.default, {\n    date: date,\n    format: formatToUse,\n    tz: timezone\n  }, currentTime);\n}\n\nReactLiveClock.propTypes = {\n  date: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  blinking: _propTypes2.default.bool,\n  format: _propTypes2.default.string,\n  interval: _propTypes2.default.number,\n  ticking: _propTypes2.default.bool,\n  timezone: _propTypes2.default.string,\n  onChange: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func])\n};\nReactLiveClock.defaultProps = {\n  date: null,\n  blinking: false,\n  format: 'HH:mm',\n  interval: 1000,\n  ticking: false,\n  timezone: null,\n  onChange: false\n};","map":null,"metadata":{},"sourceType":"script"}