{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/popular/index.js\";\nimport React, { Component } from 'react';\nimport { List, Header, Message, Button, Image, Pagination, Container, Grid, Responsive, Card, Icon } from 'semantic-ui-react'; // Message third paramater\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAllTodos, getUserTodos } from '../../actions/stocks'; // import {renderList} from './../rendernewList'\n// import moment from 'moment';\n\nimport DeleteTodoModal from './../../components/DeleteModal';\nimport { Table } from 'semantic-ui-react'; // import { getUserData, getOtherUsers } from '../../actions/profile';\n\nimport axios from 'axios';\nimport FormContainer from './../searchForm/formContainer/index';\nimport moment from 'moment';\nimport { Helmet } from 'react-helmet';\n\nclass AllTodosList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activePage: 1,\n      start: 0,\n      end: 10,\n      userData: '',\n      filteredUsers: []\n    };\n\n    this.handlePageChange = (event, data) => {\n      console.log(data);\n      this.setState({\n        activePage: data.activePage,\n        start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n        end: data.activePage * 10\n      });\n    };\n\n    this.renderList = () => {\n      // console.log(this.props.allTodos.length,'ed')\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: '70px 25px 25px 25px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Grid.Column, {\n        width: 14,\n        className: \"customScroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, console.log(this.state.filteredUsers, 'filtered users'), this.state.filteredUsers.map(item => /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: '0 0 20px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        fluid: true,\n        style: {\n          border: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        floated: \"left\",\n        size: \"mini\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, \" \", item.email))), /*#__PURE__*/React.createElement(Card.Content, {\n        extra: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        selectable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Table.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 8\n        }\n      }, \"Recent\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, \"Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(Table.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, \" \", item.myStocks[0] && item.myStocks[0].text ? item.myStock[0].text : 'array has no texts... ')), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 6\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, \"datecreated \"), \"  \"))))))))))))));\n    };\n  }\n\n  componentDidMount() {\n    const getUserData = () => {\n      axios.get('/api/user/profile', {\n        headers: {\n          authorization: localStorage.getItem('token')\n        }\n      }).then(response => {\n        // console.log(response.data.myStocks[0].text,'user response')\n        this.setState({\n          userData: response.data\n        }, () => {\n          console.log(response.data, 'sdcs');\n        });\n      });\n    };\n\n    getOtherUsers = () => {\n      axios.get('/api/user/profiles', {\n        headers: {\n          authorization: localStorage.getItem('token')\n        }\n      }).then(response => {\n        this.setState({\n          filteredUsers: response.data\n        }, () => {\n          console.log(response.data);\n        });\n      });\n    }; //  this.props.getAllTodos();\n    // this.props.getUserTodos();\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      celled: true,\n      selection: true,\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 8\n      }\n    }, this.props.getAllTodosError ? /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      header: this.props.getAllTodosError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 40\n      }\n    }) : null, this.renderList()), this.props.allTodos.length <= 9 ? null : /*#__PURE__*/React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      totalPages: Math.ceil(this.props.allTodos.length / 10),\n      onPageChange: (event, data) => this.handlePageChange(event, data),\n      activePage: this.state.activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    allTodos: state.todos.allTodos,\n    getAllTodosError: state.todos.getAllTodosError\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getAllTodos,\n  getUserTodos\n})(AllTodosList); // export default AllTodosList;\n// { this.props.getAllTodosError ? <Message negative header={this.props.getAllTodosError}/> : null }\n// { this.renderList() }\n// folder name = AllTodosList\n// renderList = () => {\n//   console.log(this.props)\n//   if (this.props.allTodos.length === 0) {\n//     return <Header content='No stocks yet'/>;\n//   } else {\n//     return this.props.allTodos.map(({ _id, text, dateCreated}) => {\n//       return (\n//         <List.Item key={_id}>\n//           <List.Content>\n//             <List.Header>{text}</List.Header>\n//             <List.Description>{moment(dateCreated).fromNow()}</List.Description>\n//           </List.Content>\n//         </List.Item>\n//       );\n//     });\n//   }\n// }\n\n{\n  /* <Responsive>\n       <Card>\n   <Card.Content header='About Amy' >\n   <Card.Header> {this.state.userData.email}</Card.Header>\n   </Card.Content>\n   <Card.Content  ><p> hello world</p></Card.Content>\n   <Card.Content extra>\n  <Button as={Link} to='/watchlist'color='green'>\n  Go to my watchlist\n  </Button>    \n    </Card.Content>\n  </Card>\n  </Responsive> */\n}\n{\n  /* <Table singleLine inverted selectable>\n  <Table.Header>\n   <Table.Row>\n   <Table.HeaderCell>Stock Name</Table.HeaderCell>\n     <Table.HeaderCell>Date</Table.HeaderCell>\n    \n   </Table.Row>\n  </Table.Header>\n  <Table.Body>\n  {this.props.allTodos.map(({_id,text,dateCreated,name})=>(\n  <Table.Row key={_id}>\n    <Table.Cell> <h3>{text}</h3></Table.Cell>\n    <Table.Cell>{moment(dateCreated).fromNow()}</Table.Cell>\n       </Table.Row>\n  ))}\n        </Table.Body>\n  </Table> */\n}","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/popular/index.js"],"names":["React","Component","List","Header","Message","Button","Image","Pagination","Container","Grid","Responsive","Card","Icon","Link","connect","getAllTodos","getUserTodos","DeleteTodoModal","Table","axios","FormContainer","moment","Helmet","AllTodosList","state","activePage","start","end","userData","filteredUsers","handlePageChange","event","data","console","log","setState","renderList","margin","map","item","border","textAlign","email","color","myStocks","text","myStock","componentDidMount","getUserData","get","headers","authorization","localStorage","getItem","then","response","getOtherUsers","render","props","getAllTodosError","allTodos","length","Math","ceil","mapStateToProps","todos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { List, Header, Message,Button,Image,Pagination,Container,Grid,Responsive,Card,Icon } from 'semantic-ui-react';\n// Message third paramater\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { getAllTodos,getUserTodos } from '../../actions/stocks';\n// import {renderList} from './../rendernewList'\n// import moment from 'moment';\nimport DeleteTodoModal from './../../components/DeleteModal';\nimport { Table } from 'semantic-ui-react'\n// import { getUserData, getOtherUsers } from '../../actions/profile';\nimport axios from 'axios'\nimport FormContainer from './../searchForm/formContainer/index'\nimport moment from 'moment'\nimport { Helmet } from 'react-helmet';\n\n\nclass AllTodosList extends Component {\n  state={\n    activePage:1,\n    start:0,\n    end:10,\n    userData:'',\n    filteredUsers:[]\n\n  }\n  \n\n  componentDidMount() {\n\n   const getUserData = () => {\n      axios.get('/api/user/profile', {\n        headers: { authorization: localStorage.getItem('token') },\n      }).then((response)=>{\n        // console.log(response.data.myStocks[0].text,'user response')\n        this.setState({userData:response.data},()=>{\n          console.log(response.data,'sdcs')\n        })\n  \n   \n      })\n  \n   \n   }\n   \n     getOtherUsers = () => {\n     axios.get('/api/user/profiles', {\n      headers: { authorization: localStorage.getItem('token') },\n    }).then((response)=>{\n      this.setState({filteredUsers:response.data},()=>{\n        console.log(response.data)\n      })\n     })\n   };\n     \n    //  this.props.getAllTodos();\n    // this.props.getUserTodos();\n  }\n\n\n  \n\n  \n\n  handlePageChange = (event, data) => {\n    console.log(data)\n    this.setState({\n      activePage: data.activePage,\n      start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n      end: data.activePage * 10\n    });\n  }\n\n \n  renderList = () => {\n     \n  // console.log(this.props.allTodos.length,'ed')\n    return(\n<div>\n\n      \n      <div style={{margin:'70px 25px 25px 25px'}}>\n\n  \n  \n  \n\n  <Grid  >\n    <Grid.Row>\n      <Grid.Column >\n \n \n\n       </Grid.Column>\n      <Grid.Column width={14} className='customScroll'>\n\n       {console.log(this.state.filteredUsers,'filtered users')}\n \n      {  this.state.filteredUsers.map((item)=>(\n\n\n         <div style={{margin:'0 0 20px 0'}}>\n\n \n \n\n\n  \n\n     <div>\n\n   \n    <Card fluid style={{border:\"none\"}} >\n\n    <Card.Content>\n      <Image\n         floated='left'\n        size='mini'\n        src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n      />\n      <Card.Header>\n        <h1 style={{textAlign:'center'}}> {item.email}</h1> \n       </Card.Header>\n    {/* <Card.Meta>{item.email} has {item.myStocks.length} stocks...</Card.Meta> */}\n      \n    </Card.Content>\n    <Card.Content extra>\n\n    <Table   selectable    >\n  <Table.Header>\n    <Table.Row>\n       <Table.HeaderCell style={{color:'black'}}>Recent</Table.HeaderCell>\n      <Table.HeaderCell style={{color:'black'}}>Date</Table.HeaderCell>\n       \n\n     \n    </Table.Row>\n  </Table.Header>\n  <Table.Body>\n   \n\n\n    <Table.Row  >\n      <Table.Cell > <p style={{color:'black'}}> {(item.myStocks[0] && item.myStocks[0].text) ? item.myStock[0].text : 'array has no texts... '\n}</p></Table.Cell>\n     <Table.Cell> <p>datecreated </p>  </Table.Cell>\n    \n\n     </Table.Row>\n     \n     \n \n\n  \n  </Table.Body>\n </Table>     \n     </Card.Content>\n\n\n     </Card>      \n\n     \n\n\n\n \n\n  </div>\n    \n\n\n \n\n        \n         </div>\n      ))}\n       \n    \n    </Grid.Column>\n    </Grid.Row>\n    </Grid>\n   \n  \n   </div>\n   </div>\n\n    )\n  };\n   \n\n  render() {\n      return (\n\n      <div>\n \n       <List celled selection size='huge'>\n        {this.props.getAllTodosError ? <Message negative header={this.props.getAllTodosError}/> : null}\n      { this.renderList() }\n\n       </List>\n\n       {this.props.allTodos.length <= 9 ? \nnull     \n       \n:\n<Pagination\n                pointing\n                secondary\n                totalPages={Math.ceil(this.props.allTodos.length / 10)}\n                onPageChange={(event,data)=> this.handlePageChange(event,data)}\n                activePage={this.state.activePage}\n                />\n              \n              }\n       </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { allTodos: state.todos.allTodos, getAllTodosError: state.todos.getAllTodosError };\n}\n\nexport default connect(mapStateToProps, { getAllTodos,getUserTodos })(AllTodosList);\n\n// export default AllTodosList;\n\n\n// { this.props.getAllTodosError ? <Message negative header={this.props.getAllTodosError}/> : null }\n// { this.renderList() }\n\n\n// folder name = AllTodosList\n\n\n\n  // renderList = () => {\n  //   console.log(this.props)\n  //   if (this.props.allTodos.length === 0) {\n  //     return <Header content='No stocks yet'/>;\n  //   } else {\n  //     return this.props.allTodos.map(({ _id, text, dateCreated}) => {\n  //       return (\n  //         <List.Item key={_id}>\n  //           <List.Content>\n  //             <List.Header>{text}</List.Header>\n  //             <List.Description>{moment(dateCreated).fromNow()}</List.Description>\n  //           </List.Content>\n  //         </List.Item>\n  //       );\n  //     });\n  //   }\n  // }\n\n\n\n\n \n\n  {/* <Responsive>\n\n       <Card>\n    <Card.Content header='About Amy' >\n    <Card.Header> {this.state.userData.email}</Card.Header>\n    </Card.Content>\n    <Card.Content  ><p> hello world</p></Card.Content>\n    <Card.Content extra>\n\n<Button as={Link} to='/watchlist'color='green'>\n  Go to my watchlist\n  </Button>    \n  \n  </Card.Content>\n  </Card>\n  </Responsive> */}\n\n\n      {/* <Table singleLine inverted selectable>\n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>Stock Name</Table.HeaderCell>\n          <Table.HeaderCell>Date</Table.HeaderCell>\n         \n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n   {this.props.allTodos.map(({_id,text,dateCreated,name})=>(\n     <Table.Row key={_id}>\n         <Table.Cell> <h3>{text}</h3></Table.Cell>\n         <Table.Cell>{moment(dateCreated).fromNow()}</Table.Cell>\n   \n        </Table.Row>\n   ))}\n      \n      </Table.Body>\n     </Table> */}"]},"metadata":{},"sourceType":"module"}