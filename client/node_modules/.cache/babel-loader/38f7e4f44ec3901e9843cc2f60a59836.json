{"ast":null,"code":"/**\n * Module dependencies.\n */\n//var http = require('http')\n//  , req = http.IncomingMessage.prototype;\nvar req = exports = module.exports = {};\n/**\n * Initiate a login session for `user`.\n *\n * Options:\n *   - `session`  Save login state in session, defaults to _true_\n *\n * Examples:\n *\n *     req.logIn(user, { session: false });\n *\n *     req.logIn(user, function(err) {\n *       if (err) { throw err; }\n *       // session saved\n *     });\n *\n * @param {User} user\n * @param {Object} options\n * @param {Function} done\n * @api public\n */\n\nreq.login = req.logIn = function (user, options, done) {\n  if (typeof options == 'function') {\n    done = options;\n    options = {};\n  }\n\n  options = options || {};\n  var property = 'user';\n\n  if (this._passport && this._passport.instance) {\n    property = this._passport.instance._userProperty || 'user';\n  }\n\n  var session = options.session === undefined ? true : options.session;\n  this[property] = user;\n\n  if (session) {\n    if (!this._passport) {\n      throw new Error('passport.initialize() middleware not in use');\n    }\n\n    if (typeof done != 'function') {\n      throw new Error('req#login requires a callback function');\n    }\n\n    var self = this;\n\n    this._passport.instance._sm.logIn(this, user, function (err) {\n      if (err) {\n        self[property] = null;\n        return done(err);\n      }\n\n      done();\n    });\n  } else {\n    done && done();\n  }\n};\n/**\n * Terminate an existing login session.\n *\n * @api public\n */\n\n\nreq.logout = req.logOut = function () {\n  var property = 'user';\n\n  if (this._passport && this._passport.instance) {\n    property = this._passport.instance._userProperty || 'user';\n  }\n\n  this[property] = null;\n\n  if (this._passport) {\n    this._passport.instance._sm.logOut(this);\n  }\n};\n/**\n * Test if request is authenticated.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nreq.isAuthenticated = function () {\n  var property = 'user';\n\n  if (this._passport && this._passport.instance) {\n    property = this._passport.instance._userProperty || 'user';\n  }\n\n  return this[property] ? true : false;\n};\n/**\n * Test if request is unauthenticated.\n *\n * @return {Boolean}\n * @api public\n */\n\n\nreq.isUnauthenticated = function () {\n  return !this.isAuthenticated();\n};","map":null,"metadata":{},"sourceType":"script"}