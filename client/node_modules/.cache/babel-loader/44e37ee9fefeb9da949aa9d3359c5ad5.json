{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/Uploads/index.js\";\nimport React, { Component } from 'react';\nimport { getUserUploads } from '../../actions/stocks';\n\nclass Uploads extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async (formValues, dispatch) => {\n      try {\n        await axios.post('/api/user/stock', formValues, {\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_TODO\n        });\n        this.props.getUserUploads();\n      } catch (e) {\n        dispatch({\n          type: ADD_TODO_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.renderAddTodo = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        autoComplete: \"off\",\n        placeholder: \"Add your stock\",\n        icon: \"dollar\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserUploads();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '100px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '0 25px 34px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }\n    }, \"My WatchList \")), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"text\",\n      component: this.renderAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fluid: true,\n      color: \"purple\",\n      content: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      divided: true,\n      selection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(UserTodoListItems, {\n      todos: this.props.todos.slice(this.state.start, this.state.end),\n      handleUpdate: this.props.updateTodoCompletedById,\n      handleDelete: this.props.deleteTodoById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }\n    })), this.props.todos.length <= 9 ? null : /*#__PURE__*/React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      totalPages: Math.ceil(this.props.todos.length / 10),\n      onPageChange: (event, data) => this.handlePageChange(event, data),\n      activePage: this.state.activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  todos: {\n    userTodos,\n    getUserTodosServerError,\n    getUserTodosClientError,\n    deleteTodoByIdError\n  }\n}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserUploads,\n  updateTodoCompletedById,\n  deleteTodoById,\n  getUserData,\n  getOtherUsers\n}))(UserTodoList);","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/Uploads/index.js"],"names":["React","Component","getUserUploads","Uploads","onSubmit","formValues","dispatch","axios","post","headers","localStorage","getItem","type","ADD_TODO","props","e","ADD_TODO_ERROR","payload","renderAddTodo","input","meta","touched","error","componentDidMount","render","margin","padding","color","handleSubmit","todos","slice","state","start","end","updateTodoCompletedById","deleteTodoById","length","Math","ceil","event","data","handlePageChange","activePage","mapStateToProps","userTodos","getUserTodosServerError","getUserTodosClientError","deleteTodoByIdError","clientError","serverError","compose","reduxForm","form","connect","getUserData","getOtherUsers","UserTodoList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getUserUploads} from '../../actions/stocks';\n\n\nclass Uploads extends Component {\n\n    componentDidMount() {\n        this.props.getUserUploads();\n      }\n\n      onSubmit = async (formValues,dispatch) => {\n    \n        try {\n        await axios.post('/api/user/stock', formValues, { headers: { 'authorization': localStorage.getItem('token')}} );\n        dispatch({ type: ADD_TODO });\n        this.props.getUserUploads();\n      } catch (e) {\n        dispatch({ type: ADD_TODO_ERROR, payload: e });\n      }\n    }\n\n    renderAddTodo = ({ input, meta }) => {\n        return (\n         <>\n   \n           <Form.Input\n             {...input}\n             error={ meta.touched && meta.error }\n             fluid\n             autoComplete='off'\n             placeholder='Add your stock'\n             icon='dollar'\n             iconPosition='left'\n   \n           />\n         </>\n       )\n     }\n    render() {\n        return (\n            <div style={{margin:'100px 0 0 0'}}>\n\n<div style={{padding:'0 25px 34px 0'}}>\n\n \n<Header as=\"h2\"  textAlign=\"center\" >\n  <p style={{color:'white'}}>My WatchList </p> \n</Header>\n   <Form size='large' onSubmit={handleSubmit(this.onSubmit)}   >\n       <Segment   >\n         <Field\n         name=\"text\"\n         component={this.renderAddTodo}\n         />\n         <Button\n         type='submit'\n         fluid\n         color='purple'\n         content='add'\n         />\n       </Segment>\n       </Form>\n       <List animated divided selection >\n         <UserTodoListItems \n         todos={this.props.todos.slice(this.state.start,this.state.end)}\n         handleUpdate={this.props.updateTodoCompletedById}\n         handleDelete={this.props.deleteTodoById}\n         />\n       </List>\n       {\n         this.props.todos.length <= 9 ? \n         null\n         : <Pagination\n         pointing\n         secondary\n         totalPages={Math.ceil(this.props.todos.length / 10)}\n         onPageChange={(event,data)=> this.handlePageChange(event,data)}\n         activePage={this.state.activePage}\n         />\n       }       \n</div>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n    return {\n      todos: userTodos,\n      clientError: getUserTodosClientError,\n      serverError: getUserTodosServerError,\n      deleteTodoByIdError,\n    };\n  }\n   export default compose(\n    reduxForm({ form: 'addTodo' }),\n    connect(mapStateToProps, { getUserUploads,updateTodoCompletedById, deleteTodoById,getUserData, getOtherUsers })\n  )(UserTodoList);"]},"metadata":{},"sourceType":"module"}