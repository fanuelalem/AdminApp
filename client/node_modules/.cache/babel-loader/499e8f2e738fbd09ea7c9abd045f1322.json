{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/searchForm/formContainer/index.js\";\nimport React, { Component } from 'react';\nimport API from \"./../utils\";\nimport Detail from './../details';\nimport SearchBar from './../search';\nimport { Grid, Message, List, Image, Icon, Container, Loader, Segment } from 'semantic-ui-react';\nimport Card from './../Card';\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport otherUtil from './../otherutil';\nimport axios from 'axios';\nexport default class FormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: {},\n      search: \"\",\n      xvalues: [],\n      yvalues: []\n    };\n\n    this.searchMovies = async query => {\n      let xfunction = [];\n      let yfunction = [];\n      otherUtil.search(query).then(response => {\n        console.log(response, 'data');\n        this.setState({\n          result: response.data\n        }, () => {\n          console.log(response.data);\n        });\n      }); //  API.search(query)\n      // .then((response)=>{\n      //   for(var key in response.data['Time Series (Daily)']){\n      //     xfunction.push(key);\n      //     yfunction.push(response.data['Time Series (Daily)'][key]['1. open'])\n      //   }\n      //   this.setState({xvalues:xfunction,yvalues:yfunction})\n      //  })\n      // .catch((e)=>{\n      //     console.log(e)\n      // })\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchMovies(this.state.search);\n    };\n  }\n\n  componentDidMount() {\n    this.searchMovies('aapl');\n  }\n\n  render() {\n    // const data={x:this.props.graphx,y:this.props.graphy}\n    // console.log(this.props,'this props')\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '15px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '0 0 0 70px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 3\n      }\n    })), /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.props.graphx,\n        y: this.props.graphy,\n        type: 'scatter',\n        mode: ' ',\n        marker: {\n          color: 'red'\n        }\n      }],\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      useResizeHandler: true,\n      responsive: true,\n      layout: {\n        titlefont: {\n          family: 'Arial, sans-serif',\n          size: 25,\n          color: 'white'\n        },\n        xaxis: {\n          color: 'white'\n        },\n        yaxis: {\n          color: 'white'\n        },\n        paper_bgcolor: '#222323',\n        plot_bgcolor: '#222323',\n        title: `\n         ${this.props.info.name ? this.props.info.name : `no stock ...`}`,\n        autosize: true\n      } // newshape:{line:{color:'white'}}, colorway:{colorlist:'white'},\n      // xaxis:{color:'white'},yaxis:{color:'white'},paper_bgcolor:'#222323',plot_bgcolor:'#222323' }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#333333',\n        margin: '15px 0 0 0px',\n        borderRadius: '9px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 5,\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 10\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }\n    }, this.props.qoute.c)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }\n    }, \" H\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 6\n      }\n    }, this.props.qoute.h)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, \" L\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 6\n      }\n    }, this.props.qoute.l)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, \" O\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 6\n      }\n    }, this.props.qoute.o)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, \" PC\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 6\n      }\n    }, this.props.qoute.pc))))));\n  }\n\n} // function mapStateToProps(state){\n//   return {allResult:state.result.allResult,resultError:state.result.allResult}\n// }\n// export default connect(mapStateToProps,{getResult})(FormContainer)\n// function mapStateToProps(state){\n//   return{allResult:state.result.allResult,resultError:state.result.resultError}\n// }\n// export default connect(mapStateToProps,{searchMovies})(FormContainer)\n\n{\n  /* <Grid padded='horizontally'textAlign='center' verticalAlign='middle'>\n         <Grid.Column style={{ maxWidth: 700 }}> */\n}\n{\n  /* <SearchBar\n  value={this.state.search}\n  handleInputChange={this.handleInputChange}\n  handleFormSubmit={this.handleFormSubmit}\n  /> */\n}\n{\n  /* <Card\n  exchange={this.state.result.exchange}\n  weburl={this.state.result.weburl}\n  ticker={this.state.result.ticker}\n  logo={this.state.result.logo}\n  heading={this.state.result.name || \n     \n     <Message negative>\n     <Message.Header>No results to display </Message.Header>\n       <p>Please try again...</p>\n   </Message>\n  }>\n  {this.state.result.name ? (\n  <Detail\n  weburl={this.state.result.weburl}\n   exchange={this.state.result.exchange}\n  shareOutstanding={this.state.result.shareOutstanding}\n  finnhubIndustry={this.state.result.finnhubIndustry}\n  name={this.state.result.name}\n  ticker={this.state.result.ticker}\n  logo={this.state.result.logo}\n  />\n  ) : (\n   <h3> </h3>\n  ) }\n  </Card>  */\n}\n{\n  /* <UserTodoList/> */\n}\n{\n  /* <List>\n  <Grid>\n   \n  <Grid.Row columns={4}>\n       <Grid.Column>\n       <List.Item>\n       <List.Header> <h2>   Company</h2> </List.Header><h5> {this.state.result.name}</h5> \n     </List.Item>      </Grid.Column>\n       <Grid.Column>\n       <List.Item>\n       <List.Header><h2 > Website</h2></List.Header>\n      <h5>   <a href={this.state.result.weburl}>   {this.state.result.weburl}    </a>    </h5>\n     </List.Item>      </Grid.Column>\n       <Grid.Column>\n       <List.Item>\n       <List.Header><h2> Exchange</h2></List.Header><h5> \n  {this.state.result.exchange}   \n        </h5>\n   </List.Item>      </Grid.Column>\n       <Grid.Column>\n       <List.Item>\n       <List.Header><h2> Industry</h2></List.Header>\n       <h5>\n  {this.state.result.finnhubIndustry}\n        </h5>\n      </List.Item>      </Grid.Column>\n     </Grid.Row>\n     </Grid> */\n}","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/searchForm/formContainer/index.js"],"names":["React","Component","API","Detail","SearchBar","Grid","Message","List","Image","Icon","Container","Loader","Segment","Card","Plot","connect","Line","otherUtil","axios","FormContainer","state","result","search","xvalues","yvalues","searchMovies","query","xfunction","yfunction","then","response","console","log","setState","data","handleInputChange","event","value","target","name","handleFormSubmit","preventDefault","componentDidMount","render","margin","x","props","graphx","y","graphy","type","mode","marker","color","width","height","titlefont","family","size","xaxis","yaxis","paper_bgcolor","plot_bgcolor","title","info","autosize","backgroundColor","borderRadius","textAlign","qoute","c","h","l","o","pc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport API from \"./../utils\"\nimport Detail from './../details'\nimport SearchBar from './../search'\nimport { Grid,Message,List,Image,Icon,Container,Loader,Segment } from 'semantic-ui-react'\nimport Card from './../Card'\nimport Plot from 'react-plotly.js';\nimport {connect} from 'react-redux'\nimport {Line} from 'react-chartjs-2'\n \n\nimport otherUtil from './../otherutil'\nimport axios from 'axios'\n  \n\n\n \n export default class FormContainer extends Component {\n    state = {\n        result: {},\n        search: \"\",\n        xvalues:[],\n        yvalues:[],\n        };\n      componentDidMount() {\n        this.searchMovies('aapl');\n  \n      }\n\n      searchMovies = async (query) => {\n        let xfunction=[];\n        let yfunction=[];\n\n        \n \n\n        otherUtil.search(query)\n        .then((response)=>{\n          console.log(response,'data')\n          this.setState({result:response.data},()=>{\n            console.log(response.data)\n          })\n        })\n\n     \n        \n\n        //  API.search(query)\n        // .then((response)=>{\n        //   for(var key in response.data['Time Series (Daily)']){\n        //     xfunction.push(key);\n        //     yfunction.push(response.data['Time Series (Daily)'][key]['1. open'])\n        //   }\n        //   this.setState({xvalues:xfunction,yvalues:yfunction})\n           \n        //  })\n        // .catch((e)=>{\n        //     console.log(e)\n        // })\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n          [name]: value\n        });\n      };\n\n      handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchMovies(this.state.search);\n         \n      };\n\n    render() {\n\n      \n\n      // const data={x:this.props.graphx,y:this.props.graphy}\n      \n\n      // console.log(this.props,'this props')\n\n\n\n        return (\n \n<div style={{margin:'15px 0 0 0'}}>\n<Container>\n  <div style={{margin:'0 0 0 70px'}}>\n  {/* <h1 > {this.props.qoute? `$${this.props.qoute.c}`   : \n  <Segment>\n  <Loader disabled />\n\n  <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n</Segment>\n  }</h1> */}\n \n  </div>\n  </Container>\n\n<Plot \n\n\n          data={[\n          {\n            x: this.props.graphx,\n            y: this.props.graphy,\n            type: 'scatter',\n            mode: ' ',\n            marker: {color: 'red'},\n            \n          }\n        ]}\n        style={{width:'100%',height:'100%'}}\n        useResizeHandler= {true}\n\n        responsive={true}\n         layout={{  titlefont: {\n          family: 'Arial, sans-serif',\n          size: 25,\n          color: 'white',\n          \n        },xaxis:{color:'white'},\n        yaxis:{color:'white'},\n        paper_bgcolor:'#222323',\n        plot_bgcolor:'#222323',title: `\n         ${this.props.info.name? this.props.info.name : `no stock ...`}`,\n\n        autosize: true\n         \n      }}\n        // newshape:{line:{color:'white'}}, colorway:{colorlist:'white'},\n        // xaxis:{color:'white'},yaxis:{color:'white'},paper_bgcolor:'#222323',plot_bgcolor:'#222323' }}\n        \n       />\n\n<div style={{backgroundColor:'#333333',margin:'15px 0 0 0px',borderRadius:'9px'}}>\n\n \n       <Grid>\n\n<Grid.Row columns={5} style={{textAlign:'center'}}>\n<Grid.Column  >\n         <h2 style={{color:'white'}}>C</h2>\n     <h4 style={{color:'white'}}>{this.props.qoute.c}</h4>\n      </Grid.Column>\n      <Grid.Column>\n<h2> H</h2>  \n     <h4>{this.props.qoute.h}</h4>   \n\n </Grid.Column>\n      <Grid.Column>\n      <h2> L</h2>\n     <h4>{this.props.qoute.l}</h4>      \n      </Grid.Column>\n      \n      <Grid.Column>\n      <h2> O</h2> \n     <h4>{this.props.qoute.o}</h4>       \n      </Grid.Column>\n      <Grid.Column>\n      <h2> PC</h2>\n     <h4>{this.props.qoute.pc}</h4>         \n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n  </div>\n\n \n\n </div>\n \n      \n        )\n    }\n}\n\n// function mapStateToProps(state){\n//   return {allResult:state.result.allResult,resultError:state.result.allResult}\n// }\n// export default connect(mapStateToProps,{getResult})(FormContainer)\n\n// function mapStateToProps(state){\n//   return{allResult:state.result.allResult,resultError:state.result.resultError}\n// }\n// export default connect(mapStateToProps,{searchMovies})(FormContainer)\n\n\n\n\n\n\n\n\n\n\n\n\n{/* <Grid padded='horizontally'textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 700 }}> */}\n\n \n          {/* <SearchBar\n value={this.state.search}\n handleInputChange={this.handleInputChange}\n handleFormSubmit={this.handleFormSubmit}\n/> */}\n{/* <Card\nexchange={this.state.result.exchange}\nweburl={this.state.result.weburl}\nticker={this.state.result.ticker}\nlogo={this.state.result.logo}\nheading={this.state.result.name || \n    \n    <Message negative>\n    <Message.Header>No results to display </Message.Header>\n      <p>Please try again...</p>\n  </Message>\n }>\n {this.state.result.name ? (\n <Detail\n weburl={this.state.result.weburl}\n\n exchange={this.state.result.exchange}\n shareOutstanding={this.state.result.shareOutstanding}\n finnhubIndustry={this.state.result.finnhubIndustry}\n name={this.state.result.name}\n ticker={this.state.result.ticker}\n logo={this.state.result.logo}\n />\n ) : (\n  <h3> </h3>\n) }\n</Card>  */}\n\n{/* <UserTodoList/> */}\n\n\n\n\n\n\n{/* <List>\n<Grid>\n  \n <Grid.Row columns={4}>\n      <Grid.Column>\n      <List.Item>\n      <List.Header> <h2>   Company</h2> </List.Header><h5> {this.state.result.name}</h5> \n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2 > Website</h2></List.Header>\n     <h5>   <a href={this.state.result.weburl}>   {this.state.result.weburl}    </a>    </h5>\n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Exchange</h2></List.Header><h5> \n{this.state.result.exchange}   \n\n      </h5>\n  </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Industry</h2></List.Header>\n      <h5>\n{this.state.result.finnhubIndustry}\n\n      </h5>\n     </List.Item>      </Grid.Column>\n    </Grid.Row>\n    </Grid> */}"]},"metadata":{},"sourceType":"module"}