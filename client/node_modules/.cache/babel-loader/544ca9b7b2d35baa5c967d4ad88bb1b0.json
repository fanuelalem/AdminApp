{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nvar _helpers = require(\"./helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} // eslint-disable-next-line no-useless-escape\n\n\nvar REG_EMAIL = /^[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*@((?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)$/i;\nvar email = (0, _helpers.memoize)(function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      domainWhitelist = _ref.domainWhitelist,\n      domainBlacklist = _ref.domainBlacklist,\n      message = _ref.message,\n      msg = _ref.msg,\n      ifCond = _ref[\"if\"],\n      unless = _ref.unless,\n      allowBlank = _ref.allowBlank;\n\n  msg = msg || message;\n  domainWhitelist = prepareList(domainWhitelist);\n  domainBlacklist = prepareList(domainBlacklist);\n  return (0, _helpers.prepare)(ifCond, unless, allowBlank, function (value) {\n    var match = value.match(REG_EMAIL);\n\n    if (!match) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'email', 'invalid'));\n    }\n\n    var domain = match[1].toLowerCase();\n\n    if (domainWhitelist && !domainInList(domain, domainWhitelist) || domainBlacklist && domainInList(domain, domainBlacklist)) {\n      return _validators[\"default\"].formatMessage((0, _helpers.prepareMsg)(msg, 'emailDomain', 'domain', {\n        domain: domain\n      }));\n    }\n  });\n});\nemail.REG_EMAIL = REG_EMAIL;\nvar _default = email; // private\n\nexports[\"default\"] = _default;\n\nfunction domainInList(domain, list) {\n  return list.some(function (d) {\n    return typeof d === 'string' ? d === domain : d.test(domain);\n  });\n}\n\nfunction prepareList(list) {\n  return list ? list.map(function (d) {\n    return d.indexOf('*') < 0 ? d.toLowerCase() : (0, _helpers.stringToReg)(d);\n  }) : list;\n}","map":null,"metadata":{},"sourceType":"script"}