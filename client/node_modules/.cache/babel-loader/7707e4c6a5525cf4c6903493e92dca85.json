{"ast":null,"code":"import { GET_USER_DATA, GET_USER_DATA_ERROR, GET_OTHER_USERS, GET_OTHER_USERS_ERROR, GET_USER_STOCKS, GET_USER_STOCKS_ERROR } from '../types';\nimport axios from 'axios';\nexport const getUserData = () => async dispatch => {\n  console.log('hit');\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/user/profile', {\n      headers: {\n        authorization: localStorage.getItem('token')\n      }\n    });\n    console.log(data.myStocks[0].text, 'inform');\n    dispatch({\n      type: GET_USER_DATA,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_USER_DATA_ERROR,\n      serverError: e,\n      clientError: 'Something went wrong please refresh try again'\n    });\n  }\n};\nexport const getOtherUsers = () => async dispatch => {\n  console.log('im hitting.other ');\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/user/profiles', {\n      headers: {\n        authorization: localStorage.getItem('token')\n      }\n    });\n    dispatch({\n      type: GET_OTHER_USERS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_OTHER_USERS_ERROR,\n      payload: e\n    });\n  }\n};\nexport const getUserStocks = () => async dispatch => {\n  try {\n    console.log('im hitting.stocks');\n    const {\n      data\n    } = await axios.get('http://localhost:3000/api/user/userStocks', {\n      headers: {\n        authorization: localStorage.getItem('token')\n      }\n    });\n    dispatch({\n      type: GET_USER_STOCKS,\n      payload: data\n    });\n  } catch (e) {\n    dispatch({\n      type: GET_USER_STOCKS_ERROR,\n      payload: e\n    });\n  }\n};","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/actions/profile/index.js"],"names":["GET_USER_DATA","GET_USER_DATA_ERROR","GET_OTHER_USERS","GET_OTHER_USERS_ERROR","GET_USER_STOCKS","GET_USER_STOCKS_ERROR","axios","getUserData","dispatch","console","log","data","get","headers","authorization","localStorage","getItem","myStocks","text","type","payload","e","serverError","clientError","getOtherUsers","getUserStocks"],"mappings":"AAAA,SACEA,aADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,qBAJF,EAKEC,eALF,EAMEC,qBANF,QAOO,UAPP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,mBAAV,EAA+B;AACpDC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAjB;AAD2C,KAA/B,CAAvB;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACM,QAAL,CAAc,CAAd,EAAiBC,IAA7B,EAAkC,QAAlC;AACAV,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEnB,aAAR;AAAuBoB,MAAAA,OAAO,EAAET;AAAhC,KAAD,CAAR;AACD,GAND,CAME,OAAOU,CAAP,EAAU;AACVb,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAElB,mBADC;AAEPqB,MAAAA,WAAW,EAAED,CAFN;AAGPE,MAAAA,WAAW,EAAE;AAHN,KAAD,CAAR;AAKD;AACF,CAfM;AAiBP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOhB,QAAP,IAAoB;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAEA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,oBAAV,EAAgC;AACrDC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAjB;AAD4C,KAAhC,CAAvB;AAGAR,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEjB,eAAR;AAAyBkB,MAAAA,OAAO,EAAET;AAAlC,KAAD,CAAR;AACD,GALD,CAKE,OAAOU,CAAP,EAAU;AACVb,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEhB,qBAAR;AAA+BiB,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD;AACF,CAXM;AAaP,OAAO,MAAMI,aAAa,GAAG,MAAM,MAAOjB,QAAP,IAAoB;AACrD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,2CAAV,EAAuD;AAC5EC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAjB;AADmE,KAAvD,CAAvB;AAGAR,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEf,eAAR;AAAyBgB,MAAAA,OAAO,EAAET;AAAlC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOU,CAAP,EAAU;AACVb,IAAAA,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAEd,qBAAR;AAA+Be,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACD;AACF,CAXM","sourcesContent":["import {\n  GET_USER_DATA,\n  GET_USER_DATA_ERROR,\n  GET_OTHER_USERS,\n  GET_OTHER_USERS_ERROR,\n  GET_USER_STOCKS,\n  GET_USER_STOCKS_ERROR,\n} from '../types';\n\n\nimport axios from 'axios';\n\nexport const getUserData = () => async (dispatch) => {\n  console.log('hit')\n  try {\n    const { data } = await axios.get('/api/user/profile', {\n      headers: { authorization: localStorage.getItem('token') },\n    });\n    console.log(data.myStocks[0].text,'inform')\n    dispatch({ type: GET_USER_DATA, payload: data });\n  } catch (e) {\n    dispatch({\n      type: GET_USER_DATA_ERROR,\n      serverError: e,\n      clientError: 'Something went wrong please refresh try again',\n    });\n  }\n}\n\nexport const getOtherUsers = () => async (dispatch) => {\n  console.log('im hitting.other ')\n\n  try {\n    const { data } = await axios.get('/api/user/profiles', {\n      headers: { authorization: localStorage.getItem('token') },\n    });\n    dispatch({ type: GET_OTHER_USERS, payload: data });\n  } catch (e) {\n    dispatch({ type: GET_OTHER_USERS_ERROR, payload: e });\n  }\n};\n\nexport const getUserStocks = () => async (dispatch) => {\n  try {\n    console.log('im hitting.stocks')\n\n    const { data } = await axios.get('http://localhost:3000/api/user/userStocks', {\n      headers: { authorization: localStorage.getItem('token') },\n    });\n    dispatch({ type: GET_USER_STOCKS, payload: data });\n  } catch (e) {\n    dispatch({ type: GET_USER_STOCKS_ERROR, payload: e });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}