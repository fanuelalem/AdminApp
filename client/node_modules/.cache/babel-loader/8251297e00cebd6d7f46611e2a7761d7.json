{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst processMultipart = require('./processMultipart');\n\nconst isEligibleRequest = require('./isEligibleRequest');\n\nconst {\n  buildOptions,\n  debugLog\n} = require('./utilities');\n\nconst DEFAULT_OPTIONS = {\n  debug: false,\n  uploadTimeout: 60000,\n  fileHandler: false,\n  uriDecodeFileNames: false,\n  safeFileNames: false,\n  preserveExtension: false,\n  abortOnLimit: false,\n  responseOnLimit: 'File size limit has been reached',\n  limitHandler: false,\n  createParentPath: false,\n  parseNested: false,\n  useTempFiles: false,\n  tempFileDir: path.join(process.cwd(), 'tmp')\n};\n/**\n * Expose the file upload middleware\n * @param {Object} options - Middleware options.\n * @returns {Function} - express-fileupload middleware.\n */\n\nmodule.exports = options => {\n  const uploadOptions = buildOptions(DEFAULT_OPTIONS, options);\n  return (req, res, next) => {\n    if (!isEligibleRequest(req)) {\n      debugLog(uploadOptions, 'Request is not eligible for file upload!');\n      return next();\n    }\n\n    processMultipart(uploadOptions, req, res, next);\n  };\n};","map":null,"metadata":{},"sourceType":"script"}