{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Popup, Table, Grid, Divider, Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { Link } from \"react-router-dom\";\nimport { ADD_TODO_ERROR, ADD_TODO } from '../../actions/types';\n\nclass WinnerListItems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n    this.style = {\n      borderRadius: 0,\n      opacity: 0.7,\n      padding: '2em'\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      const {\n        title\n      } = formValues;\n\n      try {\n        await axios.post('/api/user/stock', {\n          text: this.state.title\n        }, {\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_TODO\n        });\n        this.props.getUserTodos();\n      } catch (e) {\n        dispatch({\n          type: ADD_TODO_ERROR,\n          payload: e\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserTodos();\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    console.log(this.state, 'l');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    }, 'body { background-color: #532f8c; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '100px 40px 0px 40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      widths: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }\n    }, \"Company [ticker]\")), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }\n    }, \"Last price\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }\n    }, \"price change\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }\n    }, \"percent change\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, this.props.gainers.map(({\n      performanceId,\n      standardName,\n      ticker,\n      percentChange,\n      lastPrice,\n      priceChange,\n      exchange\n    }) => /*#__PURE__*/React.createElement(Table.Row, {\n      key: performanceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit(this.onSubmit) // onSubmit={()=>{alert('hello')}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        icon: \"eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }\n      }),\n      content: \"Popup with a custom style prop\",\n      style: style,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: '500',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, standardName, \" [\", ticker, \"]\"))), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"$\", lastPrice, \" \"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"$\", priceChange, \" \"), /*#__PURE__*/React.createElement(Table.Cell, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"+\", percentChange, \"% \"))))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  todos: {\n    userTodos,\n    getUserTodosServerError,\n    getUserTodosClientError,\n    deleteTodoByIdError\n  }\n}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserTodos,\n  updateTodoCompletedById,\n  deleteTodoById\n}))(WinnerListItems); // import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n//   state={\n//     title:'',\n//    }\n// doSomething = () => {\n//   alert('ed')\n// }\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n//   render() {\n// console.log(this.state,'l')\n//     return (\n//         <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n//           {standardName} [{ticker}]\n//           </span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//       </Table.Body>\n//     </Table>\n// </div>\n//       </div>\n//     )\n//   }\n// }\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//      </Table.Body>\n//     </Table>\n//     </div>\n//   </div>\n// );\n// export default WinnerListItems;\n// ticker,changes,price,\n// changesPercentage,companyName","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js"],"names":["React","Component","reduxForm","Field","connect","Popup","Table","Grid","Divider","Header","Form","Segment","Message","List","Pagination","Button","Icon","compose","axios","Helmet","getUserTodos","updateTodoCompletedById","deleteTodoById","Link","ADD_TODO_ERROR","ADD_TODO","WinnerListItems","state","title","style","borderRadius","opacity","padding","onSubmit","formValues","dispatch","post","text","headers","localStorage","getItem","type","props","e","payload","componentDidMount","render","handleSubmit","console","log","margin","fontWeight","gainers","map","performanceId","standardName","ticker","percentChange","lastPrice","priceChange","exchange","fontSize","mapStateToProps","todos","userTodos","getUserTodosServerError","getUserTodosClientError","deleteTodoByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Popup,Table,Grid,Divider,Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\n\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { Link } from \"react-router-dom\"\nimport { ADD_TODO_ERROR, ADD_TODO} from '../../actions/types';\n\nclass WinnerListItems extends Component {\n    state={\n    title:'',\n   }\n\n    style = {\n    borderRadius: 0,\n    opacity: 0.7,\n    padding: '2em',\n  }\n\n\n   onSubmit = async (formValues, dispatch) => {\n     const {title} = formValues\n    try {\n     await axios.post('/api/user/stock', {text:this.state.title}, { headers: { 'authorization': localStorage.getItem('token')}} );\n     dispatch({ type: ADD_TODO });\n     this.props.getUserTodos();\n   } catch (e) {\n     dispatch({ type: ADD_TODO_ERROR, payload: e });\n   }\n }\n\n componentDidMount() {\n  this.props.getUserTodos();\n}\n\n\n\n\n  render() {\n\n    const {handleSubmit} = this.props;\n\n\n    console.log(this.state,'l')\n    return (\n      <div>\n        \n\n\n        <div>\n\n\n<Helmet>\n   <style>{'body { background-color: #532f8c; }'}</style>\n\n         </Helmet>\n     <div style={{margin:'100px 40px 0px 40px'}}>\n\n    <Table widths={4}>\n     <Table.Header>\n       <Table.Row>\n\n       <Table.HeaderCell><h2 style={{fontWeight:'500'}}>Company [ticker]</h2></Table.HeaderCell>\n\n       <Table.HeaderCell>Last price</Table.HeaderCell>\n       <Table.HeaderCell>price change</Table.HeaderCell>\n\n         <Table.HeaderCell>percent change</Table.HeaderCell>\n\n       </Table.Row>\n     </Table.Header>\n     <Table.Body>\n      \n\n {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n    \n\n\n\n\n\n <Table.Row key={performanceId}>\n        <Table.Cell > \n          <Form \n           onSubmit={handleSubmit(this.onSubmit)}\n          // onSubmit={()=>{alert('hello')}}\n          >\n        \n        <Popup\n    trigger={<Button icon='eye' />}\n    content='Popup with a custom style prop'\n    style={style}\n    inverted\n  />\n           \n            {/* <Button \n            \n            style={{margin:'0 10px 0 0'}}\n             onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n          color='green'> \n          <Icon name='plus'></Icon>save to watchlist  \n          </Button>\n         */}\n\n          <span \n          style={{fontWeight:'500',fontSize:'20px'}}> \n\n          {standardName} [{ticker}]\n          \n          </span>\n          </Form>\n\n         </Table.Cell>\n\n        <Table.Cell>${lastPrice} </Table.Cell>\n        <Table.Cell >${priceChange} </Table.Cell>\n\n        <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n        {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n        </Table.Row>\n\n      \n\n  ))}\n      </Table.Body>\n    </Table>\n \n  \n</div>\n      </div>\n\n\n        \n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError,\n  };\n}\n export default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, { getUserTodos,updateTodoCompletedById, deleteTodoById })\n)(WinnerListItems);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n \n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n \n\n//   state={\n//     title:'',\n//    }\n\n// doSomething = () => {\n//   alert('ed')\n// }\n\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n \n\n//   render() {\n// console.log(this.state,'l')\n//     return (\n  \n\n\n\n//         <div>\n\n\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n    \n\n\n\n\n\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n          \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n\n//           {standardName} [{ticker}]\n          \n//           </span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n\n      \n\n//   ))}\n//       </Table.Body>\n//     </Table>\n \n  \n// </div>\n//       </div>\n\n\n//     )\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n\n\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n//   ))}\n     \n//      </Table.Body>\n//     </Table>\n \n  \n//     </div>\n\n//   </div>\n// );\n\n// export default WinnerListItems;\n\n\n// ticker,changes,price,\n// changesPercentage,companyName"]},"metadata":{},"sourceType":"module"}