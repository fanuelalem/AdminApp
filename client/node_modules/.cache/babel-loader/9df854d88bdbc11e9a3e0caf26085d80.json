{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, Segment, Button, Container, Grid, Image, Header, Icon } from 'semantic-ui-react';\nimport { email, length, required } from 'redux-form-validators';\nimport logo from './../../components/Images/Logo.png';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport fanuel from './../../components/Images/fanuel.jpg';\nimport ganesh from './../../components/Images/ganesh.png';\nimport vanessa from './../../components/Images/vanessa.jpeg';\nimport husam from './../../components/Images/husam.jpeg';\nimport './../../index.css';\nimport axios from 'axios';\nimport './../../index.css';\nimport { AUTH_USER, AUTH_USER_ERROR } from '../../actions/types';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderEmail = ({\n      input,\n      meta\n    }) => {\n      // console.log(meta);\n      return /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        autoComplete: \"off\",\n        placeholder: \"Email Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      console.log(formValues); // console.log(formsProps)\n\n      try {\n        const {\n          data\n        } = await axios.post('/api/auth/signup', formValues);\n        localStorage.setItem('token', data.token);\n        dispatch({\n          type: AUTH_USER,\n          payload: data.token\n        });\n        console.log('reached');\n        this.props.history.push('/watchlist');\n      } catch (e) {\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.renderPassword = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        type: \"password\",\n        icon: \"lock\",\n        placeholder: \"password\",\n        autoComplete: \"off\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }));\n    };\n  }\n\n  render() {\n    // console.log(\"Inside of signup render\", this.props);\n    const {\n      handleSubmit,\n      invalid,\n      submitting,\n      submitFailed\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // onSubmit={handleSubmit(this.onSubmit)}\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 4\n        }\n      }, 'body { background-Image: linear-gradient(#928dab,#948e99);  }')), /*#__PURE__*/React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '75vh',\n          margin: '0px 0 99px 0'\n        },\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        onSubmit: handleSubmit(this.onSubmit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        style: {\n          backgroundColor: '#f7f8fa'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        color: \"grey\",\n        textAlign: \"center\",\n        style: {\n          fontSize: '33px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        style: {\n          backgroundColor: 'white'\n        },\n        className: \"im22\",\n        src: logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          margin: '0 0 0 15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"Create an account \")), /*#__PURE__*/React.createElement(Field, {\n        name: \"email\",\n        component: this.renderEmail,\n        validate: [required({\n          msg: 'Email is required'\n        }), email({\n          msg: 'You must provide a valid email address'\n        })],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Field, {\n        name: \"password\",\n        component: this.renderPassword,\n        validate: [required({\n          msg: 'You must provide a Password'\n        }), length({\n          min: 6,\n          msg: 'Your password must be at least 6 characters long'\n        })],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        content: \"Sign Up\",\n        color: \"purple\",\n        fluid: true,\n        size: \"large\",\n        type: \"submit\",\n        disabled: invalid || submitting || submitFailed,\n        onClick: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"div-tag1\",\n        style: {\n          backgroundColor: '#222222'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        columns: 3,\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, \"10/10 Stock Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 16\n        }\n      }, \"This application is a helpful tool to save stocks onto a personal watchlist. It provides information on the stock markets top 10 winners and losers of the day. Users can also search and track any stock in the market and view stocks that are trending among other users.\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 1\n        }\n      }, \"      Get Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 1\n        }\n      }, \" Get access to your Watchlist by creating an account.\"), /*#__PURE__*/React.createElement(Link, {\n        as: Link,\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"purple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 1\n        }\n      }, \" Register Now\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, \" Contact Us\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 132\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"mailto:fanuelnalem@outlook.com\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 142\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(Icon, {\n        name: \"mail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 213\n        }\n      }), \"Send Feedback\"), \" \")), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"how-it-works\",\n        style: {\n          color: 'white',\n          marginTop: '0',\n          marginBottom: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 8\n        }\n      }, \"Developed By\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        columns: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: vanessa,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: husam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: fanuel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: ganesh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }))))))))), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          backgroundColor: 'rgb(55, 55, 59)',\n          padding: '10px',\n          borderRadius: '5px',\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        className: \"p-tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }\n      }, \"Copyright 2020. All rights reserved.\")))) // <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n      //   <Segment stacked>\n      //     <Field\n      //       name='email'\n      //       iscool='mannyiscool'\n      //       component={ this.renderEmail }\n      //       validate={\n      //         [\n      //           required({ msg: 'Email is required' }),\n      //           email({ msg: 'You must provide a valid email address' })\n      //         ]\n      //       }\n      //     />\n      //     <Field\n      //       name='password'\n      //       component={this.renderPassword}\n      //       validate={\n      //         [\n      //           required({ msg: 'You must provide a password' }),\n      //           length({ min: 6, msg: 'Your password must be at least 6 characters long' })\n      //         ]\n      //       }\n      //     />\n      //     <Button\n      //       content='Sign up'\n      //       color='teal'\n      //       fluid\n      //       size='large'\n      //       type='submit'\n      // disabled={ invalid || submitting || submitFailed }\n      //     />\n      //   </Segment>\n      // </Form>\n\n    );\n  }\n\n}\n\nconst asyncValidate = async ({\n  email\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/user/emails?email=${email}`);\n\n    if (data) {\n      throw new Error();\n    }\n  } catch (e) {\n    throw {\n      email: 'email is already taken'\n    };\n  }\n}; // const asyncValidate = async formValues => {\n//   try {\n//     const { data } = await axios.get(`/api/user/emails`);\n//     const foundEmail = data.some((user)=>(user.email === formValues.email))\n//     if(foundEmail){\n//       throw new Error();\n//     }\n//     // ?email=${formValues.email}\n//     // if (data) {\n//     //   throw new Error();\n//     // }\n//   } catch (e) {\n//     throw { email: 'Email already exists, please sign up with a different email' };\n//   }\n// }\n// export default reduxForm({form:'signup'})(SignUp)\n\n\nexport default reduxForm({\n  form: 'signup',\n  asyncValidate,\n  asyncChangeFields: ['email']\n})(SignUp); // export default SignUp;","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/SignUp/index.js"],"names":["React","Component","Field","reduxForm","Form","Segment","Button","Container","Grid","Image","Header","Icon","email","length","required","logo","Helmet","Link","fanuel","ganesh","vanessa","husam","axios","AUTH_USER","AUTH_USER_ERROR","SignUp","renderEmail","input","meta","touched","error","onSubmit","formValues","dispatch","console","log","data","post","localStorage","setItem","token","type","payload","props","history","push","e","renderPassword","render","handleSubmit","invalid","submitting","submitFailed","height","margin","maxWidth","backgroundColor","fontSize","msg","min","color","fontFamily","marginBottom","marginTop","padding","borderRadius","asyncValidate","get","Error","form","asyncChangeFields"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, Segment, Button,Container,Grid ,Image,Header,Icon} from 'semantic-ui-react';\nimport { email, length, required } from 'redux-form-validators';\nimport logo from './../../components/Images/Logo.png'\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport fanuel from './../../components/Images/fanuel.jpg'\nimport ganesh from './../../components/Images/ganesh.png'\nimport vanessa from './../../components/Images/vanessa.jpeg'\nimport husam from './../../components/Images/husam.jpeg'\nimport './../../index.css'\n\n\nimport axios from 'axios';\nimport './../../index.css'\nimport { AUTH_USER, AUTH_USER_ERROR } from '../../actions/types';\n\nclass SignUp extends Component {\n\n  renderEmail = ({input,meta}) => {\n    // console.log(meta);\n    return(\n      <Form.Input\n      {...input}\n      error={meta.touched && meta.error}\n      fluid\n      icon='user'\n      iconPosition='left'\n      autoComplete='off'\n      placeholder='Email Address'\n      />\n    )\n  }\n  onSubmit = async (formValues,dispatch) => {\n    console.log(formValues)\n    // console.log(formsProps)\n    try {\n      const { data } = await axios.post('/api/auth/signup', formValues);\n      localStorage.setItem('token', data.token);\n      dispatch({ type: AUTH_USER, payload: data.token });\n      console.log('reached')\n      this.props.history.push('/watchlist');\n    } catch (e) {\n      dispatch({ type: AUTH_USER_ERROR, payload: e });\n    }\n  }\n\n  // renderEmail = ({ input, meta }) => {\n  //   return (\n  //     <Form.Input\n  //       {...input}\n  //       error={ meta.touched && meta.error }\n  //       fluid\n  //       icon='user'\n  //       iconPosition='left'\n  //       autoComplete='off'\n  //       placeholder='Email Address'\n  //     />\n  //   );\n  // }\n\n\n  renderPassword = ({ input, meta }) => {\n    return (\n      <Form.Input\n        {...input}\n        error={meta.touched && meta.error }\n        fluid\n        type='password'\n        icon='lock'\n        placeholder='password'\n        autoComplete='off'\n        iconPosition='left'\n      />\n    );\n  }\n\n  render() {\n    // console.log(\"Inside of signup render\", this.props);\n     const {handleSubmit, invalid, submitting, submitFailed} = this.props;\n    return (\n      // onSubmit={handleSubmit(this.onSubmit)}\n      <div  >\n{/* background-Image: linear-gradient(#1F1C2C,#928DAB); */}\n<Helmet>\n   <style>{'body { background-Image: linear-gradient(#928dab,#948e99);  }'}</style>\n\n         </Helmet>\n         <Grid textAlign=\"center\" style={{ height: '75vh',margin:'0px 0 99px 0' }} verticalAlign=\"middle\">\n          <Grid.Column style={{ maxWidth: 500 }}>\n\n \n   \n      \n      <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n        \n        <Segment style={{backgroundColor:'#f7f8fa' }} >\n        <Header  color='grey' textAlign=\"center\" style={{ fontSize: '33px' }}>\n       <Image style={{backgroundColor:'white'}} className='im22'src={logo} />\n              <span style={{ margin:'0 0 0 15px'}}>Create an account </span> \n            </Header>\n          <Field\n          name='email'\n          component={this.renderEmail}\n          validate={[\n            required({msg: 'Email is required'}),\n            email({msg: 'You must provide a valid email address'})\n          ]}\n          />\n          <Field\n          name='password'\n          component={this.renderPassword}\n          validate={[\n            required({msg:'You must provide a Password'}),\n            length({min:6,msg:'Your password must be at least 6 characters long'})\n          ]}\n          />\n          <Button\n          content=\"Sign Up\"\n          color=\"purple\"\n          fluid\n          size=\"large\"\n          type=\"submit\"\n          disabled={ invalid || submitting || submitFailed }\n          onClick\n          />\n        </Segment>\n      </Form>\n      </Grid.Column>\n</Grid>\n<div className='div-tag1'style={{backgroundColor:'#222222'}}>\n    <Container>\n<Segment vertical>\n\n     <Grid columns={3} divided>\n    <Grid.Row>\n      <Grid.Column>\n          <h1 style={{color:'white'}}className='how-it-works'>10/10 Stock Tracker</h1>\n          <div><p style={{color:'white',fontSize:'1.25rem',fontFamily:'\"Helvetica Neue\",Helvetica,Arial,sans-serif'}}>\n          This application is a helpful tool to save stocks onto a personal watchlist. It provides information on the stock markets top 10 winners and losers of the day. Users can also search and track any stock in the market and view stocks that are trending among other users.\n\n</p></div>\n      </Grid.Column>\n      <Grid.Column>\n<h1 style={{color:'white'}}className='how-it-works'>      Get Started\n</h1>\n<p  style={{color:'white',fontSize:'1.25rem',fontFamily:'\"Helvetica Neue\",Helvetica,Arial,sans-serif'}}> Get access to your Watchlist by creating an account.\n</p>\n <Link\nas={Link} to='/signup'>\n<Button color='purple'> Register Now</Button>\n\n</Link>\n        </Grid.Column>\n      <Grid.Column>\n      <h1 style={{color:'white'}}className='how-it-works'> Contact Us</h1> \n      <p  style={{color:'white',fontSize:'1.25rem',fontFamily:'\"Helvetica Neue\",Helvetica,Arial,sans-serif',marginBottom:'10px'}}> <span  >  <a href='mailto:fanuelnalem@outlook.com'  style={{color:'white'}}   >  <Icon name='mail'></Icon>Send Feedback</a> </span></p>  \n\n      \n       <h1 className='how-it-works'style={{color:'white',marginTop:'0',marginBottom:'18px'}}>\n       Developed By\n       </h1>  \n       <div> \n           <Grid>\n\n            <Grid.Row columns={4}>\n      <Grid.Column>\n        <Image className='img' src={vanessa} />\n      </Grid.Column>\n      <Grid.Column>\n        <Image className='img'src={husam} />\n      </Grid.Column>\n      <Grid.Column>\n        <Image className='img'src={fanuel} />\n      </Grid.Column>\n      <Grid.Column>\n        <Image className='img'src={ganesh} />\n      </Grid.Column>\n    </Grid.Row>\n    </Grid>\n\n    </div>\n           \n\n      </Grid.Column>\n    </Grid.Row>\n    </Grid>\n     \n    </Segment>\n     <p style={{backgroundColor:'rgb(55, 55, 59)',padding:'10px',borderRadius:'5px',color:'white',fontSize:'1.25rem',fontFamily:'\"Helvetica Neue\",Helvetica,Arial,sans-serif' }}className='p-tag' >Copyright 2020. All rights reserved.</p>\n\n      </Container>\n\n</div> \n      </div>\n\n\n\n      // <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n      //   <Segment stacked>\n      //     <Field\n      //       name='email'\n      //       iscool='mannyiscool'\n      //       component={ this.renderEmail }\n      //       validate={\n      //         [\n      //           required({ msg: 'Email is required' }),\n      //           email({ msg: 'You must provide a valid email address' })\n      //         ]\n      //       }\n      //     />\n      //     <Field\n      //       name='password'\n      //       component={this.renderPassword}\n      //       validate={\n      //         [\n      //           required({ msg: 'You must provide a password' }),\n      //           length({ min: 6, msg: 'Your password must be at least 6 characters long' })\n      //         ]\n      //       }\n      //     />\n      //     <Button\n      //       content='Sign up'\n      //       color='teal'\n      //       fluid\n      //       size='large'\n      //       type='submit'\n            // disabled={ invalid || submitting || submitFailed }\n      //     />\n      //   </Segment>\n      // </Form>\n    );\n  }\n}\n\nconst asyncValidate = async ({email})=>{\n  try {\n    const {data}=await axios.get(`/api/user/emails?email=${email}`);\n    if(data){\n      throw new Error();\n    }\n  } catch (e) {\n    throw{email:'email is already taken'};\n  }\n}\n// const asyncValidate = async formValues => {\n//   try {\n//     const { data } = await axios.get(`/api/user/emails`);\n//     const foundEmail = data.some((user)=>(user.email === formValues.email))\n//     if(foundEmail){\n//       throw new Error();\n//     }\n//     // ?email=${formValues.email}\n//     // if (data) {\n//     //   throw new Error();\n//     // }\n//   } catch (e) {\n//     throw { email: 'Email already exists, please sign up with a different email' };\n//   }\n// }\n// export default reduxForm({form:'signup'})(SignUp)\nexport default reduxForm({ form: 'signup', asyncValidate, asyncChangeFields: [ 'email' ] })(SignUp);\n// export default SignUp;"]},"metadata":{},"sourceType":"module"}