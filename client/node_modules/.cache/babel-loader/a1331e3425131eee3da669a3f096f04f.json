{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/Users/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Grid, Container, Responsive, Card, Image, Icon } from 'semantic-ui-react';\nimport { getUserData, getOtherUsers } from '../../actions/profile';\nimport requireAuth from './../../hoc/requireAuth';\nimport UserProfile from '../../components/AllProfileHeader';\nimport UsersCard from './UsersCard'; // import AllProfileHeader from '../../components/AllProfileHeader';\n// import UserProfile from './../../components/UserProfile';\n// import UsersCard from './UsersCard';\n// import './scrollableContainer.css';\n\nclass Users extends Component {\n  componentDidMount() {\n    this.props.getUserData();\n    this.props.getOtherUsers();\n  }\n\n  render() {\n    console.log(this.props, 'dc');\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        margin: '100px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      Container: true,\n      stackable: true,\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Responsive, {\n      minWidth: 768,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, this.prop))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 12,\n      className: \"customScroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      fluid: true,\n      stackable: true,\n      doubling: true,\n      itemsPerRow: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UsersCard, {\n      users: this.props.filteredUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }\n    }))))));\n  }\n\n}\n\n;\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser.getUserData,\n    filteredUsers: state.filteredUsers.getOtherUsers,\n    getUsersError: state.users.getUsersError\n  };\n}\n\nexport default compose(connect(mapStateToProps, {\n  getUserData,\n  getOtherUsers\n}), requireAuth)(Users);","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/Users/index.js"],"names":["React","Component","connect","compose","Grid","Container","Responsive","Card","Image","Icon","getUserData","getOtherUsers","requireAuth","UserProfile","UsersCard","Users","componentDidMount","props","render","console","log","margin","prop","filteredUsers","mapStateToProps","state","currentUser","getUsersError","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA2CC,KAA3C,EAAiDC,IAAjD,QAA6D,mBAA7D;AAGA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,uBAA3C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAMA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAN,SAAoBd,SAApB,CAA8B;AAE5Be,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,WAAX;AACA,SAAKO,KAAL,CAAWN,aAAX;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB,EAAuB,IAAvB;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEJ;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,MAAM,EAAC;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CADF,eAQE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,SAAS,MAA3B;AAA4B,MAAA,SAAS,MAArC;AAAsC,MAAA,QAAQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,IAAV,CAHF,CADF,CADF,eAQE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,MAAjB;AAAkB,MAAA,SAAS,MAA3B;AAA4B,MAAA,QAAQ,MAApC;AAAqC,MAAA,WAAW,EAAE,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADF,CARF,CADF,CARF,CADF;AA2BD;;AApC2B;;AAqC7B;;AAGD,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBhB,WAD1B;AAELa,IAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBZ,aAF9B;AAGLgB,IAAAA,aAAa,EAAEF,KAAK,CAACG,KAAN,CAAYD;AAHtB,GAAP;AAKD;;AAED,eAAexB,OAAO,CACpBD,OAAO,CAACsB,eAAD,EAAkB;AAAEd,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAlB,CADa,EAEpBC,WAFoB,CAAP,CAGbG,KAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Grid, Container, Responsive, Card,Image,Icon } from 'semantic-ui-react';\n\n\nimport { getUserData, getOtherUsers } from '../../actions/profile';\nimport requireAuth from './../../hoc/requireAuth';\nimport UserProfile from '../../components/AllProfileHeader';\nimport UsersCard from './UsersCard';\n\n \n \n\n \n// import AllProfileHeader from '../../components/AllProfileHeader';\n// import UserProfile from './../../components/UserProfile';\n// import UsersCard from './UsersCard';\n\n// import './scrollableContainer.css';\n\nclass Users extends Component {\n\n  componentDidMount() {\n    this.props.getUserData();\n    this.props.getOtherUsers();\n  }\n\n  render() {\n    console.log(this.props,'dc')\n    return (\n      <Container>\n        <Grid columns={2}>\n\n    <h2 style={{margin:'100px 0 0 0'}}> \n {}\n    </h2>\n          {/* <AllProfileHeader /> */}\n        </Grid>\n        <Grid.Row>\n          <Grid columns={2} Container stackable centered>\n            <Grid.Column width={4}>\n              <Responsive minWidth={768}>\n                  \n                {/* <UserProfile currentUser={this.props.currentUser} /> */}\n                <h2>{this.prop}</h2>\n              </Responsive>\n            </Grid.Column>\n            <Grid.Column width={12} className='customScroll'>\n              <Card.Group fluid stackable doubling itemsPerRow={1} >\n                 <UsersCard users={this.props.filteredUsers} />\n              </Card.Group>\n            </Grid.Column>\n          </Grid>\n        </Grid.Row>\n      </Container>\n    )\n  }\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser.getUserData,\n    filteredUsers: state.filteredUsers.getOtherUsers,\n    getUsersError: state.users.getUsersError\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, { getUserData, getOtherUsers }),\n  requireAuth\n)(Users);"]},"metadata":{},"sourceType":"module"}