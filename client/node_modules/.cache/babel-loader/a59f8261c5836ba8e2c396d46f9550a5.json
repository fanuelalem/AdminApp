{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid, Divider, Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index';\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\nimport axios from 'axios';\nimport UserTodoListItems from './userWatchListItem'; // import requireAuth from '../../hoc/requireAuth';\n\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { ADD_TODO_ERROR, ADD_TODO } from '../../actions/types';\n\nclass UserTodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activePage: 1,\n      start: 0,\n      end: 10\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      try {\n        await axios.post('/api/user/stock', formValues, {\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_TODO\n        });\n        this.props.getUserTodos();\n      } catch (e) {\n        dispatch({\n          type: ADD_TODO_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.addWinnerStock = () => {\n      alert('hello');\n    };\n\n    this.renderAddTodo = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        autoComplete: \"off\",\n        placeholder: \"Add your stock\",\n        icon: \"dollar\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    this.handlePageChange = (event, data) => {\n      console.log(data);\n      this.setState({\n        activePage: data.activePage,\n        start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n        end: data.activePage * 10\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserTodos();\n  }\n\n  render(props) {\n    console.log(this.props, 'dcsdcsds');\n    const {\n      handleSubmit\n    } = this.props; // console.log(this.props.result,'rerfv')\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, 'body { background-Image: linear-gradient(#928dab,#948e99); }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '100px 40px 0px 40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        backgroundColor: '#222323'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormContainer // graphx = {this.props.xvalues} \n    // graphy = {this.props.yvalues} \n    // data= {this.props.result} \n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      content: \"My Watchlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"text\",\n      component: this.renderAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fluid: true,\n      color: \"purple\",\n      content: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      divided: true,\n      selection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UserTodoListItems, {\n      todos: this.props.todos.slice(this.state.start, this.state.end),\n      handleUpdate: this.props.updateTodoCompletedById,\n      handleDelete: this.props.deleteTodoById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    })), this.props.todos.length <= 9 ? null : /*#__PURE__*/React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      totalPages: Math.ceil(this.props.todos.length / 10),\n      onPageChange: (event, data) => this.handlePageChange(event, data),\n      activePage: this.state.activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }))))));\n  } //     const { handleSubmit } = this.props;\n  //     console.log(this.props);\n  //     return (\n  //       <>\n  //         <Header as='h2' color='teal' textAlign='center' content='Welcome to do the todo app'/>\n  //         <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n  //           <Segment stacked>\n  //             <Field\n  //               name='text'\n  //               component={this.renderAddTodo}\n  //             />\n  //             <Button\n  //               type='submit'\n  //               fluid\n  //               color='teal'\n  //               content='Add a todo'\n  //             />\n  //           </Segment>\n  //         </Form>\n  //         <List animated divided selection>\n  //           <UserTodoListItems\n  //             todos={this.props.todos.slice(this.state.start, this.state.end)}\n  //             handleUpdate={this.props.updateTodoCompletedById}\n  //             handleDelete={this.props.deleteTodoById}/>\n  //         </List>\n  //         {\n  //           this.props.todos.length <= 9 ?\n  //             null\n  //             : <Pagination\n  //               totalPages={ Math.ceil( this.props.todos.length / 10) }\n  //               onPageChange={ (event, data) =>  this.handlePageChange(event, data) }\n  //               activePage={this.state.activePage}\n  //             />\n  //         }\n  //       </>\n  //     );\n  //   }\n  // }\n  // // function mapStateToProps(state) {\n  // //   return {\n  // //     todos: state.todos.userTodos,\n  // //     clientError: state.todos.getUserTodosClientError,\n  // //     serverError: state.todos.getUserTodosServerError\n  // //   };\n  // // }\n  // function mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  //   return {\n  //     todos: userTodos,\n  //     clientError: getUserTodosClientError,\n  //     serverError: getUserTodosServerError,\n  //     deleteTodoByIdError,\n  //   };\n  // }\n  // // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n  // // 1 way\n  // // export default reduxForm({ form: 'addTodo' })(connect(mapStateToProps, { getUserTodos })(UserTodoList));\n  // // 2nd way\n  // // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n  // // export default reduxForm({ form: 'addTodo'})(composedComponent);\n  // export default compose(\n  //   reduxForm({ form: 'addTodo' }),\n  //   requireAuth,\n  //   connect(mapStateToProps, { getUserTodos, updateTodoCompletedById, deleteTodoById })\n  // )(UserTodoList);\n\n\n}\n\nfunction mapStateToProps({\n  todos: {\n    userTodos,\n    getUserTodosServerError,\n    getUserTodosClientError,\n    deleteTodoByIdError\n  }\n}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserTodos,\n  updateTodoCompletedById,\n  deleteTodoById,\n  getUserData,\n  getOtherUsers\n}))(UserTodoList);","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js"],"names":["React","Component","reduxForm","Field","connect","Grid","Divider","Header","Form","Segment","Message","List","Pagination","Button","Icon","FormContainer","compose","Helmet","getUserData","getOtherUsers","axios","UserTodoListItems","getUserTodos","updateTodoCompletedById","deleteTodoById","ADD_TODO_ERROR","ADD_TODO","UserTodoList","state","activePage","start","end","onSubmit","formValues","dispatch","post","headers","localStorage","getItem","type","props","e","payload","addWinnerStock","alert","renderAddTodo","input","meta","touched","error","handlePageChange","event","data","console","log","setState","componentDidMount","render","handleSubmit","margin","backgroundColor","todos","slice","length","Math","ceil","mapStateToProps","userTodos","getUserTodosServerError","getUserTodosClientError","deleteTodoByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid,Divider,Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index'\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\n\n\n  \nimport axios from 'axios';\n\nimport UserTodoListItems from './userWatchListItem';\n\n// import requireAuth from '../../hoc/requireAuth';\n\n\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\n\nimport { ADD_TODO_ERROR, ADD_TODO} from '../../actions/types';\n\nclass UserTodoList extends Component {\n\nstate={\n  activePage:1,\n  start:0,\n  end:10\n}\n\n\n// onSubmit = async (formValues,dispatch) => {\n    \n//   const {text} = formValues\n  \n//         try {\n//         await axios.post('/api/user/stock', {text:'ko'}, { headers: { 'authorization': localStorage.getItem('token')}} );\n//         dispatch({ type: ADD_TODO });\n//         this.props.getUserTodos();\n//       } catch (e) {\n//         dispatch({ type: ADD_TODO_ERROR, payload: e });\n//       }\n//     }\n  \n \n\n  onSubmit = async (formValues,dispatch) => {\n    \n\n\n      try {\n      await axios.post('/api/user/stock', formValues, { headers: { 'authorization': localStorage.getItem('token')}} );\n      dispatch({ type: ADD_TODO });\n      this.props.getUserTodos();\n    } catch (e) {\n      dispatch({ type: ADD_TODO_ERROR, payload: e });\n    }\n  }\n\n\naddWinnerStock = () => {\n  alert('hello')\n}\n \n\n  componentDidMount() {\n     this.props.getUserTodos();\n   }\n\n  renderAddTodo = ({ input, meta }) => {\n     return (\n      <>\n\n        <Form.Input\n          {...input}\n          error={ meta.touched && meta.error }\n          fluid\n          autoComplete='off'\n          placeholder='Add your stock'\n          icon='dollar'\n          iconPosition='left'\n\n        />\n      </>\n    )\n  }\n\n\n  handlePageChange = (event, data) => {\n    console.log(data)\n    this.setState({\n      activePage: data.activePage,\n      start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n      end: data.activePage * 10\n    });\n  }\n\n\n  render(props) {\n    console.log(this.props,'dcsdcsds')\n      const {handleSubmit} = this.props;\n      // console.log(this.props.result,'rerfv')\n\n      return(\n           <>\n<Helmet>\n   <style>{'body { background-Image: linear-gradient(#928dab,#948e99); }'}</style>\n\n         </Helmet>\n              <div style={{margin:'100px 40px 0px 40px'}}>\n\n \n<Segment   style={{backgroundColor:'#222323'}} >\n    <Grid columns={2} relaxed='very'>\n      <Grid.Column >\n\n     \n      <FormContainer \n      // graphx = {this.props.xvalues} \n      // graphy = {this.props.yvalues} \n      // data= {this.props.result} \n      />   \n \n      </Grid.Column>\n      <Grid.Column> \n          \n\n\n\n       <Header as=\"h2\"  textAlign=\"center\" content=\"My Watchlist\"/>\n          <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n              <Segment   >\n                <Field\n                name=\"text\"\n                component={this.renderAddTodo}\n                />\n                <Button\n                type='submit'\n                fluid\n                color='purple'\n                content='add'\n                />\n              </Segment>\n              </Form>\n              <List animated divided selection>\n                <UserTodoListItems \n                todos={this.props.todos.slice(this.state.start,this.state.end)}\n                handleUpdate={this.props.updateTodoCompletedById}\n                handleDelete={this.props.deleteTodoById}\n                />\n              </List>\n              {\n                this.props.todos.length <= 9 ? \n                null\n                : <Pagination\n                pointing\n                secondary\n                totalPages={Math.ceil(this.props.todos.length / 10)}\n                onPageChange={(event,data)=> this.handlePageChange(event,data)}\n                activePage={this.state.activePage}\n                />\n              }       \n\n              </Grid.Column>\n    </Grid>\n\n    \n  </Segment>\n  </div>\n\n          </>\n      );\n  }\n//     const { handleSubmit } = this.props;\n//     console.log(this.props);\n//     return (\n//       <>\n//         <Header as='h2' color='teal' textAlign='center' content='Welcome to do the todo app'/>\n//         <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n//           <Segment stacked>\n//             <Field\n//               name='text'\n//               component={this.renderAddTodo}\n//             />\n//             <Button\n//               type='submit'\n//               fluid\n//               color='teal'\n//               content='Add a todo'\n//             />\n//           </Segment>\n//         </Form>\n//         <List animated divided selection>\n//           <UserTodoListItems\n//             todos={this.props.todos.slice(this.state.start, this.state.end)}\n//             handleUpdate={this.props.updateTodoCompletedById}\n//             handleDelete={this.props.deleteTodoById}/>\n//         </List>\n//         {\n//           this.props.todos.length <= 9 ?\n//             null\n//             : <Pagination\n//               totalPages={ Math.ceil( this.props.todos.length / 10) }\n//               onPageChange={ (event, data) =>  this.handlePageChange(event, data) }\n//               activePage={this.state.activePage}\n//             />\n//         }\n//       </>\n//     );\n//   }\n// }\n\n// // function mapStateToProps(state) {\n// //   return {\n// //     todos: state.todos.userTodos,\n// //     clientError: state.todos.getUserTodosClientError,\n// //     serverError: state.todos.getUserTodosServerError\n// //   };\n// // }\n\n\n// function mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n//   return {\n//     todos: userTodos,\n//     clientError: getUserTodosClientError,\n//     serverError: getUserTodosServerError,\n//     deleteTodoByIdError,\n//   };\n// }\n\n// // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n\n\n// // 1 way\n// // export default reduxForm({ form: 'addTodo' })(connect(mapStateToProps, { getUserTodos })(UserTodoList));\n\n// // 2nd way\n// // const composedComponent = connect(mapStateToProps, { getUserTodos })(UserTodoList);\n// // export default reduxForm({ form: 'addTodo'})(composedComponent);\n\n\n// export default compose(\n//   reduxForm({ form: 'addTodo' }),\n//   requireAuth,\n//   connect(mapStateToProps, { getUserTodos, updateTodoCompletedById, deleteTodoById })\n// )(UserTodoList);\n\n}\n\nfunction mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError,\n  };\n}\n export default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, { getUserTodos,updateTodoCompletedById, deleteTodoById,getUserData, getOtherUsers })\n)(UserTodoList);\n\n\n\n\n "]},"metadata":{},"sourceType":"module"}