{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/Trending/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { List, Header, Table, Message, Button, Image, Pagination, Container, Grid, Responsive, Card, Icon } from 'semantic-ui-react';\nimport { Helmet } from 'react-helmet';\nimport twitter from './../../components/Images/twitteravi.jpg';\nexport default class Trending extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activePage: 1,\n      start: 0,\n      end: 10,\n      userData: '',\n      filteredUsers: []\n    };\n\n    this.getUserData = () => {\n      axios.get('/api/user/profile', {\n        headers: {\n          authorization: localStorage.getItem('token')\n        }\n      }).then(response => {\n        // console.log(response.data.myStocks[0].text,'user response')\n        this.setState({\n          userData: response.data\n        }, () => {\n          console.log(response.data, 'sdcs');\n        });\n      });\n    };\n\n    this.getOtherUsers = () => {\n      axios.get('/api/user/profiles', {\n        headers: {\n          authorization: localStorage.getItem('token')\n        }\n      }).then(response => {\n        this.setState({\n          filteredUsers: response.data.reverse()\n        }, () => {\n          console.log(response.data, 'other users');\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getOtherUsers();\n    this.getUserData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '80px 20px 0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, 'body { background-color: #532f8c')), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 14,\n      className: \"customScroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, this.state.filteredUsers.map((item, id) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      style: {\n        margin: '0 0 20px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      divided: \"vertically\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    })))), /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      style: {\n        border: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }\n    }))))))));\n  }\n\n} // <Card.Content extra>\n// {item.myStocks.length? \n// <div>\n// <Table   selectable    >\n// <Table.Header>\n// <Table.Row>\n//  <Table.HeaderCell style={{color:'black'}}>Recent stocks</Table.HeaderCell>\n// <Table.HeaderCell  style={{color:'black'}}>Date</Table.HeaderCell>\n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n// <Table.Row  >\n// <Table.Cell > \n//   <p style={{color:'black'}}>{item.myStocks[0].text}</p>\n//   </Table.Cell>\n// <Table.Cell> \n//  <p style={{color:'black'}}>{item.myStocks[0].dateCreated } </p>  \n//  </Table.Cell>\n// </Table.Row>\n// <Table.Row  >\n//  <Table.Cell>\n// <p style={{color:'black'}}>{item.myStocks[1]? item.myStocks[1].text:'none'}</p>\n//  </Table.Cell>\n// <Table.Cell> \n// <p style={{color:'black'}}>{item.myStocks[1]? item.myStocks[1].dateCreated:'none'}</p>\n//  {/* <p>{item.myStocks.length? item.myStocks[1].dateCreated : 'none'} </p>  */}\n//   </Table.Cell>\n// </Table.Row>\n// </Table.Body>\n// </Table>   \n// </div>\n// :\n// <div>  \n// <Table   selectable    >\n// <Table.Header>\n// <Table.Row>\n//  <Table.HeaderCell style={{color:'black'}}>Recent stocks</Table.HeaderCell>\n//  <Table.HeaderCell style={{color:'black'}}></Table.HeaderCell>\n// <Table.HeaderCell style={{color:'black'}}>Date</Table.HeaderCell>\n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n// <Table.Row  >\n// <Table.Cell > <p style={{color:'black'}}>user has no stocks yet..</p></Table.Cell>\n// <Table.Cell> <p>    </p>  </Table.Cell>\n// </Table.Row>\n// </Table.Body>\n// </Table>   \n// </div>      }\n// </Card.Content>\n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n// {props.stocks.map(({_id,completed,text,dateCreated})=>(\n// <Table.Row key={_id}>\n//    <Table.Cell > <h5 style={{color:'white'}}>{text}</h5></Table.Cell>\n//    <Table.Cell style={{color:'white'}}>{moment(dateCreated).fromNow()} </Table.Cell>\n//    <Table.Cell>        <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/>\n// </Table.Cell>\n//    </Table.Row>\n// ))}\n// </Table.Body>\n// </Table>","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/Trending/index.js"],"names":["React","Component","axios","List","Header","Table","Message","Button","Image","Pagination","Container","Grid","Responsive","Card","Icon","Helmet","twitter","Trending","state","activePage","start","end","userData","filteredUsers","getUserData","get","headers","authorization","localStorage","getItem","then","response","setState","data","console","log","getOtherUsers","reverse","componentDidMount","render","margin","map","item","id","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,KAAtB,EAA6BC,OAA7B,EAAqCC,MAArC,EAA4CC,KAA5C,EAAkDC,UAAlD,EAA6DC,SAA7D,EAAuEC,IAAvE,EAA4EC,UAA5E,EAAuFC,IAAvF,EAA4FC,IAA5F,QAAwG,mBAAxG;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AAKA,eAAe,MAAMC,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAG9CiB,KAH8C,GAGxC;AACJC,MAAAA,UAAU,EAAC,CADP;AAEJC,MAAAA,KAAK,EAAC,CAFF;AAGJC,MAAAA,GAAG,EAAC,EAHA;AAIJC,MAAAA,QAAQ,EAAC,EAJL;AAKJC,MAAAA,aAAa,EAAC;AALV,KAHwC;;AAAA,SAoB9CC,WApB8C,GAoBhC,MAAM;AAClBtB,MAAAA,KAAK,CAACuB,GAAN,CAAU,mBAAV,EAA+B;AAC7BC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAjB;AADoB,OAA/B,EAEGC,IAFH,CAESC,QAAD,IAAY;AAClB;AACA,aAAKC,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAACS,QAAQ,CAACE;AAAnB,SAAd,EAAuC,MAAI;AACzCC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB,EAA0B,MAA1B;AACD,SAFD;AAKD,OATD;AAYF,KAjC8C;;AAAA,SAmC7CG,aAnC6C,GAmC7B,MAAM;AACtBlC,MAAAA,KAAK,CAACuB,GAAN,CAAU,oBAAV,EAAgC;AAC/BC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAjB;AADsB,OAAhC,EAEEC,IAFF,CAEQC,QAAD,IAAY;AAClB,aAAKC,QAAL,CAAc;AAACT,UAAAA,aAAa,EAACQ,QAAQ,CAACE,IAAT,CAAcI,OAAd;AAAf,SAAd,EAAsD,MAAI;AACxDH,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB,EAA2B,aAA3B;AACA,SAFF;AAGA,OAND;AAOD,KA3C8C;AAAA;;AAa9CK,EAAAA,iBAAiB,GAAG;AAGjB,SAAKF,aAAL;AACA,SAAKZ,WAAL;AAEF;;AAyBDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,kCAAR,CADH,CAFM,eAQN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKtB,KAAL,CAAWK,aAAX,CAAyBkB,GAAzB,CAA6B,CAACC,IAAD,EAAMC,EAAN,kBAG7B;AAAK,MAAA,GAAG,EAAED,IAAI,CAACC,EAAf;AAAmB,MAAA,KAAK,EAAE;AAACH,QAAAA,MAAM,EAAC;AAAR,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,iCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,iCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADO,CAFA,eAaX,oBAAC,IAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,KAAK,EAAE;AAACI,QAAAA,MAAM,EAAC;AAAR,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbW,CADF,CAHA,CAHH,CALF,CADJ,CARM,CADF;AAsDD;;AAnG6C,C,CA4HhD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAGA;AACA;AAIA;AAOA;AAQA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport { List, Header,Table, Message,Button,Image,Pagination,Container,Grid,Responsive,Card,Icon } from 'semantic-ui-react';\nimport { Helmet } from 'react-helmet';\nimport twitter from './../../components/Images/twitteravi.jpg'\n\n\n\n \nexport default class Trending extends Component {\n\n\n  state={\n    activePage:1,\n    start:0,\n    end:10,\n    userData:'',\n    filteredUsers:[]\n\n  }\n  \n\n  componentDidMount() {\n\n \n     this.getOtherUsers()\n     this.getUserData()\n   \n  }\n  getUserData = () => {\n    axios.get('/api/user/profile', {\n      headers: { authorization: localStorage.getItem('token') },\n    }).then((response)=>{\n      // console.log(response.data.myStocks[0].text,'user response')\n      this.setState({userData:response.data},()=>{\n        console.log(response.data,'sdcs')\n      })\n\n \n    })\n\n \n }\n \n   getOtherUsers = () => {\n   axios.get('/api/user/profiles', {\n    headers: { authorization: localStorage.getItem('token') },\n  }).then((response)=>{\n    this.setState({filteredUsers:response.data.reverse()},()=>{\n      console.log(response.data, 'other users')\n     })\n   })\n };\n  render() {\n    return (\n      <div style={{margin:'80px 20px 0px 20px'}}>\n\n<Helmet>\n   <style>{'body { background-color: #532f8c'}</style>\n\n \n         </Helmet>\n\n<Grid  >\n    <Grid.Row>\n      <Grid.Column >\n \n \n       </Grid.Column>\n      <Grid.Column width={14} className='customScroll'>\n\n  \n      {  this.state.filteredUsers.map((item,id)=>(\n\n\n         <div key={item.id} style={{margin:'0 0 20px 0'}}>\n           <div>\n\n           <Grid divided='vertically'>\n    <Grid.Row columns={2}>\n      <Grid.Column>\n        <Image src='/images/wireframe/paragraph.png' />\n      </Grid.Column>\n      <Grid.Column>\n        <Image src='/images/wireframe/paragraph.png' />\n      </Grid.Column>\n    </Grid.Row>\n    </Grid>\n\n<Card  fluid style={{border:\"none\"}}  >\n \n  </Card>   \n\n\n\n</div>\n  </div>\n\n))}\n       \n    \n    </Grid.Column>\n    </Grid.Row>\n    </Grid>       \n    \n    \n    </div>\n    )\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// <Card.Content extra>\n      \n// {item.myStocks.length? \n// <div>\n// <Table   selectable    >\n// <Table.Header>\n// <Table.Row>\n//  <Table.HeaderCell style={{color:'black'}}>Recent stocks</Table.HeaderCell>\n\n// <Table.HeaderCell  style={{color:'black'}}>Date</Table.HeaderCell>\n\n\n\n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n\n// <Table.Row  >\n\n\n// <Table.Cell > \n \n//   <p style={{color:'black'}}>{item.myStocks[0].text}</p>\n  \n//   </Table.Cell>\n\n\n// <Table.Cell> \n//  <p style={{color:'black'}}>{item.myStocks[0].dateCreated } </p>  \n//  </Table.Cell>\n\n\n// </Table.Row>\n// <Table.Row  >\n\n//  <Table.Cell>\n\n// <p style={{color:'black'}}>{item.myStocks[1]? item.myStocks[1].text:'none'}</p>\n\n\n//  </Table.Cell>\n\n// <Table.Cell> \n// <p style={{color:'black'}}>{item.myStocks[1]? item.myStocks[1].dateCreated:'none'}</p>\n\n//  {/* <p>{item.myStocks.length? item.myStocks[1].dateCreated : 'none'} </p>  */}\n \n//   </Table.Cell>\n\n\n// </Table.Row>\n\n// </Table.Body>\n// </Table>   \n\n// </div>\n\n\n// :\n// <div>  \n\n// <Table   selectable    >\n// <Table.Header>\n// <Table.Row>\n//  <Table.HeaderCell style={{color:'black'}}>Recent stocks</Table.HeaderCell>\n//  <Table.HeaderCell style={{color:'black'}}></Table.HeaderCell>\n\n// <Table.HeaderCell style={{color:'black'}}>Date</Table.HeaderCell>\n \n\n\n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n\n// <Table.Row  >\n\n\n// <Table.Cell > <p style={{color:'black'}}>user has no stocks yet..</p></Table.Cell>\n// <Table.Cell> <p>    </p>  </Table.Cell>\n\n\n// </Table.Row>\n\n\n// </Table.Body>\n// </Table>   \n\n\n\n// </div>      }\n\n\n\n\n\n\n// </Card.Content>\n\n\n\n\n\n\n      \n// </Table.Row>\n// </Table.Header>\n// <Table.Body>\n \n// {props.stocks.map(({_id,completed,text,dateCreated})=>(\n\n\n\n// <Table.Row key={_id}>\n//    <Table.Cell > <h5 style={{color:'white'}}>{text}</h5></Table.Cell>\n//    <Table.Cell style={{color:'white'}}>{moment(dateCreated).fromNow()} </Table.Cell>\n//    <Table.Cell>        <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/>\n// </Table.Cell>\n\n//    </Table.Row>\n   \n\n// ))}\n\n// </Table.Body>\n// </Table>\n\n"]},"metadata":{},"sourceType":"module"}