{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Popup, Table, Grid, Divider, Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { Link } from \"react-router-dom\";\nimport { ADD_TODO_ERROR, ADD_TODO } from '../../actions/types';\n\nclass WinnerListItems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      visible: false,\n      isOpen: false,\n      handleClose: false,\n      handleOpen: false\n    };\n  }\n\n  //    onSubmit = async (formValues, dispatch) => {\n  //      const {title} = formValues\n  //     try {\n  //      await axios.post('/api/user/stock', {text:this.state.title}, { headers: { 'authorization': localStorage.getItem('token')}} );\n  //      dispatch({ type: ADD_TODO });\n  //      this.props.getUserTodos();\n  //    } catch (e) {\n  //      dispatch({ type: ADD_TODO_ERROR, payload: e });\n  //    }\n  //  }\n  componentDidMount() {\n    this.props.getUserTodos();\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    const style = {\n      borderRadius: '3px',\n      padding: '1em'\n    };\n    console.log(this.state, 'l');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, console.log('cdc'), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, 'body { background-color: #532f8c; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '100px 40px 0px 40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      widths: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 26\n      }\n    }, \"Company [ticker]\")), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }, \"Last price\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, \"price change\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }, \"percent change\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, this.props.gainers.map(({\n      performanceId,\n      standardName,\n      ticker,\n      percentChange,\n      lastPrice,\n      priceChange,\n      exchange\n    }) => /*#__PURE__*/React.createElement(Table.Row, {\n      key: performanceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form //  onSubmit={handleSubmit(this.onSubmit)}\n    // onSubmit={()=>{alert('hello')}}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, console.log('hello'), /*#__PURE__*/React.createElement(Popup //  content={`${standardName} has been added`}\n    , {\n      open: this.state.isOpen,\n      style: style,\n      on: \"click\",\n      basic: true,\n      open: this.state.isOpen,\n      onClose: this.handleClose,\n      onOpen: this.handleOpen,\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        color: \"green\",\n        onClick: () => {\n          this.handleClose();\n          this.handleOpen();\n          this.setState({\n            title: standardName\n          }, () => {\n            console.log(standardName);\n          });\n        },\n        style: {\n          margin: '0 10px 0 0'\n        },\n        icon: \"eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }), \" save to watchlist\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      vertical: true,\n      compact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 4\n      }\n    }, `${standardName} has been added to your watchlist`)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: '500',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, standardName, \" [\", ticker, \"]\"))), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"$\", lastPrice, \" \"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, \"$\", priceChange, \" \"), /*#__PURE__*/React.createElement(Table.Cell, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"+\", percentChange, \"% \"))))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  todos: {\n    userTodos,\n    getUserTodosServerError,\n    getUserTodosClientError,\n    deleteTodoByIdError\n  }\n}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserTodos,\n  updateTodoCompletedById,\n  deleteTodoById\n}))(WinnerListItems); // import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n//   state={\n//     title:'',\n//    }\n// doSomething = () => {\n//   alert('ed')\n// }\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n//   render() {\n// console.log(this.state,'l')\n//     return (\n//         <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n//           {standardName} [{ticker}]\n//           </span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//       </Table.Body>\n//     </Table>\n// </div>\n//       </div>\n//     )\n//   }\n// }\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n//         </Table.Row>\n//   ))}\n//      </Table.Body>\n//     </Table>\n//     </div>\n//   </div>\n// );\n// export default WinnerListItems;\n// ticker,changes,price,\n// changesPercentage,companyName","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/apiListWinners/index.js"],"names":["React","Component","reduxForm","Field","connect","Popup","Table","Grid","Divider","Header","Form","Segment","Message","List","Pagination","Button","Icon","compose","axios","Helmet","getUserTodos","updateTodoCompletedById","deleteTodoById","Link","ADD_TODO_ERROR","ADD_TODO","WinnerListItems","state","title","visible","isOpen","handleClose","handleOpen","componentDidMount","props","render","handleSubmit","style","borderRadius","padding","console","log","margin","fontWeight","gainers","map","performanceId","standardName","ticker","percentChange","lastPrice","priceChange","exchange","setState","fontSize","mapStateToProps","todos","userTodos","getUserTodosServerError","getUserTodosClientError","deleteTodoByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Popup,Table,Grid,Divider,Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\n\nimport { getUserTodos, updateTodoCompletedById, deleteTodoById } from '../../actions/stocks';\nimport { Link } from \"react-router-dom\"\nimport { ADD_TODO_ERROR, ADD_TODO} from '../../actions/types';\n\nclass WinnerListItems extends Component {\n    state={\n    title:'',\n    visible:false,\n    isOpen: false,\n    handleClose: false,\n    handleOpen:false\n  }\n   \n\n\n  \n  \n\n\n//    onSubmit = async (formValues, dispatch) => {\n//      const {title} = formValues\n//     try {\n//      await axios.post('/api/user/stock', {text:this.state.title}, { headers: { 'authorization': localStorage.getItem('token')}} );\n//      dispatch({ type: ADD_TODO });\n//      this.props.getUserTodos();\n//    } catch (e) {\n//      dispatch({ type: ADD_TODO_ERROR, payload: e });\n//    }\n//  }\n\n\n\n componentDidMount() {\n  this.props.getUserTodos();\n}\n\n\n\n\n  render() {\n\n    const {handleSubmit} = this.props;\n    const style = {\n      borderRadius: '3px',\n      padding: '1em',\n      \n    }\n\n    console.log(this.state,'l')\n    return (\n      <div>\n        \n{console.log('cdc')}\n\n        <div>\n\n\n<Helmet>\n   <style>{'body { background-color: #532f8c; }'}</style>\n\n         </Helmet>\n     <div style={{margin:'100px 40px 0px 40px'}}>\n\n    <Table widths={4}>\n     <Table.Header>\n       <Table.Row>\n\n       <Table.HeaderCell><h2 style={{fontWeight:'500'}}>Company [ticker]</h2></Table.HeaderCell>\n\n       <Table.HeaderCell>Last price</Table.HeaderCell>\n       <Table.HeaderCell>price change</Table.HeaderCell>\n\n         <Table.HeaderCell>percent change</Table.HeaderCell>\n\n       </Table.Row>\n     </Table.Header>\n     <Table.Body>\n      \n\n {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n    \n\n\n\n\n\n <Table.Row key={performanceId}>\n        <Table.Cell > \n          <Form \n          //  onSubmit={handleSubmit(this.onSubmit)}\n          // onSubmit={()=>{alert('hello')}}\n          >\n        \n\n        {console.log('hello')}\n        <Popup\n      //  content={`${standardName} has been added`}\n      open={this.state.isOpen}\n      \n     style={style}\n     on='click'\n      basic\n      open={this.state.isOpen}\n      onClose={this.handleClose}\n      onOpen={this.handleOpen}\n      trigger={<Button\n      color='green'\n     onClick={()=>{\n   \n      this.handleClose()\n      this.handleOpen()\n\n    this.setState({title:standardName},()=>{console.log(standardName)})}}  \n    style={{margin:'0 10px 0 0'}}\n    icon='eye'>\n    \n      <Icon name='plus'></Icon> save to watchlist\n    </Button>} >\n    \n   <Message\n\n   vertical compact>\n   {`${standardName} has been added to your watchlist`}\n     </Message> \n  \n  \n\n\n    </Popup>\n           \n            {/* <Button \n            \n            style={{margin:'0 10px 0 0'}}\n             onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n          color='green'> \n          <Icon name='plus'></Icon>save to watchlist  \n          </Button>\n         */}\n\n          <span \n          style={{fontWeight:'500',fontSize:'20px'}}> \n\n          {standardName} [{ticker}]\n          \n          </span>\n          </Form>\n\n         </Table.Cell>\n\n        <Table.Cell>${lastPrice} </Table.Cell>\n        <Table.Cell >${priceChange} </Table.Cell>\n\n        <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n        {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n        </Table.Row>\n\n      \n\n  ))}\n      </Table.Body>\n    </Table>\n \n  \n</div>\n      </div>\n\n\n        \n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps({ todos: { userTodos, getUserTodosServerError, getUserTodosClientError, deleteTodoByIdError}}) {\n  return {\n    todos: userTodos,\n    clientError: getUserTodosClientError,\n    serverError: getUserTodosServerError,\n    deleteTodoByIdError,\n  };\n}\n export default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, { getUserTodos,updateTodoCompletedById, deleteTodoById })\n)(WinnerListItems);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react'\n//  import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n//  import axios from 'axios'\n \n// // import \"./../../../../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n// export default class WinnerListItems extends Component {\n \n\n//   state={\n//     title:'',\n//    }\n\n// doSomething = () => {\n//   alert('ed')\n// }\n\n// doSomethingElse = () => {\n//   console.log('hello')\n// }\n\n// executeFunctions = () => {\n//   this.doSomething()\n//   this.doSomethingElse()\n// }\n \n\n//   render() {\n// console.log(this.state,'l')\n//     return (\n  \n\n\n\n//         <div>\n\n\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {this.props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n    \n\n\n\n\n\n//  <Table.Row key={performanceId}>\n//         <Table.Cell > \n//           <Button \n          \n//     onClick={this.executeFunctions}\n//             // onClick={()=>{this.setState({title:standardName},()=>{console.log(standardName)})}}  \n//           color='green'> \n//           <Icon style={{margin:'0 0 0 0'}}\n//           name='plus'></Icon>\n//           </Button><span \n//           style={{fontWeight:'600'}}> \n\n//           {standardName} [{ticker}]\n          \n//           </span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n\n      \n\n//   ))}\n//       </Table.Body>\n//     </Table>\n \n  \n// </div>\n//       </div>\n\n\n//     )\n//   }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\" \n// import { Link } from \"react-router-dom\"\n// import { Helmet } from 'react-helmet';\n\n// // import \"../App.css\"\n// import { Table,Icon ,Button} from 'semantic-ui-react'\n\n\n// const WinnerListItems = props => (\n// <div>\n// <Helmet>\n//    <style>{'body { background-color: #532f8c; }'}</style>\n\n//          </Helmet>\n//      <div style={{margin:'100px 40px 0px 40px'}}>\n\n//     <Table widths={4}>\n//      <Table.Header>\n//        <Table.Row>\n\n//        <Table.HeaderCell><h2>Company [ticker]</h2></Table.HeaderCell>\n\n//        <Table.HeaderCell>Last price</Table.HeaderCell>\n//        <Table.HeaderCell>price change</Table.HeaderCell>\n\n//          <Table.HeaderCell>percent change</Table.HeaderCell>\n\n//        </Table.Row>\n//      </Table.Header>\n//      <Table.Body>\n      \n\n//  {props.gainers.map(({performanceId,standardName,ticker,percentChange,lastPrice,priceChange,exchange})=>(\n//     <Table.Row key={performanceId}>\n//         <Table.Cell > <Button  color='green'> <Icon style={{margin:'0 0 0 0'}}name='plus'></Icon></Button><span style={{fontWeight:'600'}}> {standardName} [{ticker}]</span></Table.Cell>\n\n//         <Table.Cell>${lastPrice} </Table.Cell>\n//         <Table.Cell >${priceChange} </Table.Cell>\n\n//         <Table.Cell positive>+{percentChange}% </Table.Cell>\n\n\n//         {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n \n//         </Table.Row>\n//   ))}\n     \n//      </Table.Body>\n//     </Table>\n \n  \n//     </div>\n\n//   </div>\n// );\n\n// export default WinnerListItems;\n\n\n// ticker,changes,price,\n// changesPercentage,companyName"]},"metadata":{},"sourceType":"module"}