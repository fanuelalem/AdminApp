{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringToReg = stringToReg;\nexports.regFormat = regFormat;\nexports.prepare = prepare;\nexports.selectNum = selectNum;\nexports.isNumber = isNumber;\nexports.isObject = isObject;\nexports.getIn = getIn;\nexports.prepareMsg = prepareMsg;\nexports.toObjectMsg = toObjectMsg;\nexports.memoize = memoize;\nexports.assign = exports.trunc = exports.TO_STRING = exports.HAS_PROP = void 0;\n\nvar _validators = _interopRequireDefault(require(\"./validators\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar HAS_PROP = {}.hasOwnProperty;\nexports.HAS_PROP = HAS_PROP;\nvar TO_STRING = {}.toString; // eslint-disable-next-line no-useless-escape\n\nexports.TO_STRING = TO_STRING;\nvar ESCAPE_REG = /([.+?^=!:${}()|[\\]\\/\\\\])/g; // Removed star char\n\nvar ANY_REG = /\\*/g; // string with \"*\" => RegExp\n\nfunction stringToReg(str) {\n  return new RegExp('^' + str.replace(ESCAPE_REG, '\\\\$1').replace(ANY_REG, '.*') + '$', 'i');\n}\n\nfunction regFormat(func, messageType) {\n  return memoize(function (options) {\n    options = options || {};\n    var msg = options.msg || options.message;\n    return prepare(options['if'], options.unless, options.allowBlank, function (value) {\n      if (!value.match(func(options))) {\n        return _validators[\"default\"].formatMessage(prepareMsg(msg, messageType));\n      }\n    });\n  });\n}\n\nfunction prepare(ifCond, unlessCond, allowBlank, func) {\n  return function (value) {\n    var allValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!value || _typeof(value) !== 'object') {\n      value = value == null ? '' : '' + value;\n\n      if ((allowBlank != null ? allowBlank : _validators[\"default\"].defaultOptions.allowBlank) && !value.trim()) {\n        return;\n      }\n    }\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if ((typeof ifCond !== 'function' || ifCond.apply(void 0, [allValues, value].concat(args))) && (typeof unlessCond !== 'function' || !unlessCond.apply(void 0, [allValues, value].concat(args)))) {\n      return func.apply(void 0, [value, allValues].concat(args));\n    }\n  };\n}\n\nvar trunc = Math.trunc ||\n/* istanbul ignore next */\nfunction trunc(num) {\n  return num < 0 ? Math.ceil(num) : Math.floor(num);\n};\n\nexports.trunc = trunc;\n\nvar assign = Object.assign ||\n/* istanbul ignore next */\nfunction (obj) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var source = arguments[i];\n    if (source != null) for (var key in source) {\n      if (HAS_PROP.call(source, key)) obj[key] = source[key];\n    }\n  }\n\n  return obj;\n};\n\nexports.assign = assign;\n\nfunction selectNum(var1, var2) {\n  return isNumber(var1) ? +var1 : arguments.length > 1 && isNumber(var2) ? +var2 : null;\n}\n\nfunction isNumber(num) {\n  // eslint-disable-next-line\n  return !isNaN(num) && (0 != num || '' !== ('' + num).trim());\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && TO_STRING.call(obj) === '[object Object]' && obj !== null;\n} // Immutable.js compatibility\n\n\nfunction getIn(h, keys) {\n  /* istanbul ignore next */\n  if (typeof h.getIn === 'function') return h.getIn(keys);\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    h = (h ||\n    /* istanbul ignore next */\n    {})[keys[i]];\n  }\n\n  return h;\n}\n\nfunction prepareMsg(msg, type) {\n  var args = arguments;\n  var lastIndex = args.length - 1;\n  var values = args[lastIndex];\n\n  if (typeof values === 'string') {\n    values = void 0;\n    ++lastIndex;\n  }\n\n  if (msg == null) {\n    return defaultMessage(type, values);\n  }\n\n  if (HAS_PROP.call(msg, 'props') && isReactElement(msg)) {\n    msg = msg.props;\n  }\n\n  for (var i = lastIndex - 1; i >= 1; --i) {\n    if (msg[args[i]] != null) {\n      msg = msg[args[i]];\n      break;\n    }\n  }\n\n  if (isObject(msg)) {\n    if (HAS_PROP.call(msg, 'id') || HAS_PROP.call(msg, 'defaultMessage')) {\n      return assign({}, msg, {\n        values: values\n      });\n    }\n\n    return defaultMessage(type, values);\n  }\n\n  return {\n    id: msg,\n    defaultMessage: msg,\n    values: values\n  };\n}\n\nfunction toObjectMsg(msg) {\n  if (msg == null) return null;\n  return isObject(msg) ? msg : {\n    id: msg,\n    defaultMessage: msg\n  };\n}\n\nfunction memoize(func) {\n  func.cache = {};\n  return function (options) {\n    var memoize = options ? options.memoize : null;\n    if (memoize == null) memoize = _validators[\"default\"].defaultOptions.memoize;\n    if (memoize != null && !memoize) return func(options);\n    var key = typeof memoize === 'function' ? memoize(options, stringify) : stringify(options);\n    return HAS_PROP.call(func.cache, key) ? func.cache[key] : func.cache[key] = func(options);\n  };\n} // private\n\n\nfunction defaultMessage(type, values) {\n  var msg = _validators[\"default\"].messages[type];\n  return typeof msg === 'string' ? {\n    defaultMessage: msg,\n    values: values\n  } : assign({}, msg, {\n    values: values\n  });\n}\n\nfunction stringify(options) {\n  var arr = [];\n  var value;\n\n  for (var k in options) {\n    /* istanbul ignore else */\n    if (HAS_PROP.call(options, k)) {\n      value = options[k];\n      arr.push(k, isReactElement(value) ? stringify(value.props) : isObject(value) ? stringify(value) : value.toString());\n    }\n  }\n\n  return JSON.stringify(arr);\n}\n\nfunction isReactElement(object) {\n  return _typeof(object) === 'object' && object !== null && '$$typeof' in object;\n}","map":null,"metadata":{},"sourceType":"script"}