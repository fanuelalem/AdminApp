{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/winners/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, Header, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { increment, decrement } from '../../actions/counter';\nimport axios from 'axios';\nimport WinnerListItems from '../apiListWinners'; // import requireAuth from '../../hoc/requireAuth';\n\nclass Winners extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      gainer: [],\n      losers: []\n    };\n\n    this.componentDidMount = () => {\n      this.getWinners();\n    };\n\n    this.getWinners = () => {\n      console.log('api request axios');\n      axios({\n        method: 'GET',\n        url: 'https://morning-star.p.rapidapi.com/market/v2/get-movers',\n        headers: {\n          'x-rapidapi-key': '46d623d4e3mshe0376e4a2f88b30p13b625jsn10c462d75ab2',\n          'x-rapidapi-host': 'morning-star.p.rapidapi.com'\n        }\n      });\n      axios.request(options).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    this.addWinner = () => {\n      axios.post('/api/user/stock', {\n        title: this.state.gainer.standardName\n      }).then(response => {\n        this.setState({\n          title: response.data\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WinnerListItems, {\n      gainers: this.state.gainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 2\n      }\n    })));\n  }\n\n} // This takes a key which is what we want the states name to be as props\n// The value is what state we want to pull out from the store\n// function mapStateToProps(state) {\n//   return { counter: state.counter };\n// };\n// 2nd parameter to connect is what actions we want wired up to this component\n// To be sent to all of our reducers\n// export default requireAuth(connect(mapStateToProps, { increment, decrement })(Counter));\n//\n// export default compose(\n//   connect(mapStateToProps, { increment, decrement}),requireAuth)(Counter);\n// export default connect(mapStateToProps,{increment,decrement})(Counter)\n\n\nexport default Winners; //other account api \n// axios.get('https://financialmodelingprep.com/api/v3/gainers?apikey=fc798fa9b934e1e167d9324db570eb17')\n// .then((response)=>{\n//   this.setState({\n//     gainer:response.data\n//   },()=>{\n//     console.log(response)\n//   })\n// })\n// .catch((e)=>{\n//   console.log(e)\n// })\n// axios({\n//   \"method\":\"GET\",\n//   \"url\":\"https://morning-star.p.rapidapi.com/market/v2/get-movers\",\n//   \"headers\":{\n//   \"content-type\":\"application/octet-stream\",\n//   \"x-rapidapi-host\":\"morning-star.p.rapidapi.com\",\n//   \"x-rapidapi-key\":\"e74c1b33f6mshe580bbf974b73ccp1d5bcbjsn5bf09c8f0b61\",\n//   \"useQueryString\":true\n//   }\n//   })\n//   .then((response)=>{\n//     this.setState({\n//       gainer:response.data.gainers\n//     },()=>{\n//       console.log(response.data.gainers)\n//     })\n//   })\n//   .catch((error)=>{\n//     console.log(error)\n//   })\n// axios({\n//   \"method\":\"GET\",\n//   \"url\":\"https://morning-star.p.rapidapi.com/market/v2/get-movers\",\n//   \"headers\":{\n//   \"content-type\":\"application/octet-stream\",\n//   \"x-rapidapi-host\":\"morning-star.p.rapidapi.com\",\n//   \"x-rapidapi-key\":\"f75310b92amsh13e6e1887369dacp14e2b7jsn1d042dbb2e3b\",\n//   \"useQueryString\":true\n//   }\n//   })\n//   .then((response)=>{\n//     this.setState({\n//       gainer:response.data.gainers\n//     },()=>{\n//       console.log(response,'winner')\n//     })\n//   })\n//   .catch((error)=>{\n//     console.log(error)\n//   })","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/winners/index.js"],"names":["React","Component","Grid","Header","Button","connect","compose","increment","decrement","axios","WinnerListItems","Winners","state","title","gainer","losers","componentDidMount","getWinners","console","log","method","url","headers","request","options","then","response","data","catch","error","addWinner","post","standardName","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACC,OAAOC,eAAP,MAA4B,mBAA5B,C,CAED;;AAEA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAChCW,KADgC,GAC1B;AACNC,MAAAA,KAAK,EAAC,EADA;AAENC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,MAAM,EAAC;AAHD,KAD0B;;AAAA,SAMhCC,iBANgC,GAMd,MAAI;AACpB,WAAKC,UAAL;AACA,KAR8B;;AAAA,SAU/BA,UAV+B,GAUlB,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAV,MAAAA,KAAK,CAAC;AACLW,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,GAAG,EAAE,0DAFA;AAGLC,QAAAA,OAAO,EAAE;AACP,4BAAkB,oDADX;AAEP,6BAAmB;AAFZ;AAHJ,OAAD,CAAL;AAWAb,MAAAA,KAAK,CAACc,OAAN,CAAcC,OAAd,EAAuBC,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAC9CR,QAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACC,IAArB;AACD,OAFD,EAEGC,KAFH,CAES,UAAUC,KAAV,EAAiB;AACxBX,QAAAA,OAAO,CAACW,KAAR,CAAcA,KAAd;AACD,OAJD;AAMF,KA9B+B;;AAAA,SAgChCC,SAhCgC,GAgCpB,MAAM;AACjBrB,MAAAA,KAAK,CAACsB,IAAN,CAAW,iBAAX,EAA6B;AAAClB,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWE,MAAX,CAAkBkB;AAAzB,OAA7B,EAAqEP,IAArE,CAA2EC,QAAD,IAAY;AACpF,aAAKO,QAAL,CAAc;AAACpB,UAAAA,KAAK,EAACa,QAAQ,CAACC;AAAhB,SAAd;AACD,OAFD;AAIA,KArC+B;AAAA;;AAuC9BO,EAAAA,MAAM,GAAG;AACN,wBACC,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACP,oBAAC,eAAD;AAAkB,MAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWE,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CADF,CADD;AAOF;;AA/C6B,C,CAkDhC;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;;;AACA,eAAeH,OAAf,C,CAIA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Header, Button } from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { increment, decrement } from '../../actions/counter';\nimport axios from 'axios';\n import WinnerListItems from '../apiListWinners';\n\n// import requireAuth from '../../hoc/requireAuth';\n\nclass Winners extends Component {\nstate={\ntitle:'',\ngainer:[],\nlosers:[]\n}\ncomponentDidMount=()=>{\n  this.getWinners()\n }\n \n getWinners = () => {\n   console.log('api request axios')\n\n   axios({\n    method: 'GET',\n    url: 'https://morning-star.p.rapidapi.com/market/v2/get-movers',\n    headers: {\n      'x-rapidapi-key': '46d623d4e3mshe0376e4a2f88b30p13b625jsn10c462d75ab2',\n      'x-rapidapi-host': 'morning-star.p.rapidapi.com'\n    }\n   })\n \n   \n   \n   axios.request(options).then(function (response) {\n     console.log(response.data);\n   }).catch(function (error) {\n     console.error(error);\n   });\n\n}\n\naddWinner = () => {\n axios.post('/api/user/stock',{title:this.state.gainer.standardName}).then((response)=>{\n   this.setState({title:response.data})\n })\n\n}\n\n  render() {\n     return (\n      <Grid centered>\n        <Grid.Column textAlign='center'>\n <WinnerListItems  gainers={this.state.gainer}/> \n         </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\n// This takes a key which is what we want the states name to be as props\n// The value is what state we want to pull out from the store\n// function mapStateToProps(state) {\n//   return { counter: state.counter };\n// };\n// 2nd parameter to connect is what actions we want wired up to this component\n// To be sent to all of our reducers\n\n\n\n// export default requireAuth(connect(mapStateToProps, { increment, decrement })(Counter));\n//\n// export default compose(\n//   connect(mapStateToProps, { increment, decrement}),requireAuth)(Counter);\n\n// export default connect(mapStateToProps,{increment,decrement})(Counter)\nexport default Winners\n\n\n\n//other account api \n\n  // axios.get('https://financialmodelingprep.com/api/v3/gainers?apikey=fc798fa9b934e1e167d9324db570eb17')\n  // .then((response)=>{\n  //   this.setState({\n  //     gainer:response.data\n  //   },()=>{\n  //     console.log(response)\n  //   })\n  // })\n  // .catch((e)=>{\n  //   console.log(e)\n  // })\n\n  // axios({\n  //   \"method\":\"GET\",\n  //   \"url\":\"https://morning-star.p.rapidapi.com/market/v2/get-movers\",\n  //   \"headers\":{\n  //   \"content-type\":\"application/octet-stream\",\n  //   \"x-rapidapi-host\":\"morning-star.p.rapidapi.com\",\n  //   \"x-rapidapi-key\":\"e74c1b33f6mshe580bbf974b73ccp1d5bcbjsn5bf09c8f0b61\",\n  //   \"useQueryString\":true\n  //   }\n  //   })\n  //   .then((response)=>{\n  //     this.setState({\n  //       gainer:response.data.gainers\n  //     },()=>{\n  //       console.log(response.data.gainers)\n  //     })\n  //   })\n  //   .catch((error)=>{\n  //     console.log(error)\n  //   })\n\n  // axios({\n  //   \"method\":\"GET\",\n  //   \"url\":\"https://morning-star.p.rapidapi.com/market/v2/get-movers\",\n  //   \"headers\":{\n  //   \"content-type\":\"application/octet-stream\",\n  //   \"x-rapidapi-host\":\"morning-star.p.rapidapi.com\",\n  //   \"x-rapidapi-key\":\"f75310b92amsh13e6e1887369dacp14e2b7jsn1d042dbb2e3b\",\n  //   \"useQueryString\":true\n  //   }\n  //   })\n  //   .then((response)=>{\n  //     this.setState({\n  //       gainer:response.data.gainers\n  //     },()=>{\n  //       console.log(response,'winner')\n  //     })\n  //   })\n  //   .catch((error)=>{\n  //     console.log(error)\n  //   })"]},"metadata":{},"sourceType":"module"}