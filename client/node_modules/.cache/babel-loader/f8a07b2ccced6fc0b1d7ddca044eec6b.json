{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid, Divider, Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index';\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\nimport axios from 'axios';\nimport UserTodoListItems from './userWatchListItem'; // import requireAuth from '../../hoc/requireAuth';\n\nimport { getUserStocks, updateStocksCompletedById, deleteStockById } from '../../actions/stocks';\nimport { ADD_STOCKS_ERROR, ADD_STOCK } from '../../actions/types';\n\nclass UserTodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activePage: 1,\n      start: 0,\n      end: 10\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      try {\n        await axios.post('/api/user/stock', formValues, {\n          headers: {\n            'authorization': localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_STOCK\n        });\n        this.props.getUserStocks();\n      } catch (e) {\n        dispatch({\n          type: ADD_STOCKS_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.addWinnerStock = () => {\n      alert('hello');\n    };\n\n    this.renderAddTodo = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        autoComplete: \"off\",\n        placeholder: \"Add your stock\",\n        icon: \"dollar\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    this.handlePageChange = (event, data) => {\n      console.log(data);\n      this.setState({\n        activePage: data.activePage,\n        start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n        end: data.activePage * 10\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserStocks();\n  }\n\n  render(props) {\n    console.log(this.props, 'dcsdcsds');\n    const {\n      handleSubmit\n    } = this.props; // console.log(this.props.result,'rerfv')\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 4\n      }\n    }, 'body { background-color: #532f8c ; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '80px 20px 0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        backgroundColor: '#222324',\n        border: '1px solid white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-info \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(FormContainer, {\n      graphx: this.props.x,\n      graphy: this.props.y,\n      qoute: this.props.qoute,\n      info: this.props.result // graphx = {this.props.xvalues} \n      // graphy = {this.props.yvalues} \n      // data= {this.props.result} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '0 25px 34px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 10\n      }\n    }, \"My WatchList \")), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        backgroundColor: '#333333'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"text\",\n      component: this.renderAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fluid: true,\n      color: \"purple\",\n      content: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      divided: true,\n      selection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UserTodoListItems, {\n      stocks: this.props.stocks.slice(this.state.start, this.state.end),\n      handleUpdate: this.props.updateStocksCompletedById,\n      handleDelete: this.props.deleteStockById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })))))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  stocks: {\n    userStocks,\n    getUserStocksServerError,\n    getUserStockClientError,\n    deleteStockByIdError\n  }\n}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserStocks,\n  updateStocksCompletedById,\n  deleteStockById,\n  getUserData,\n  getOtherUsers\n}))(UserTodoList);","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js"],"names":["React","Component","reduxForm","Field","connect","Grid","Divider","Header","Form","Segment","Message","List","Pagination","Button","Icon","FormContainer","compose","Helmet","getUserData","getOtherUsers","axios","UserTodoListItems","getUserStocks","updateStocksCompletedById","deleteStockById","ADD_STOCKS_ERROR","ADD_STOCK","UserTodoList","state","activePage","start","end","onSubmit","formValues","dispatch","post","headers","localStorage","getItem","type","props","e","payload","addWinnerStock","alert","renderAddTodo","input","meta","touched","error","handlePageChange","event","data","console","log","setState","componentDidMount","render","handleSubmit","margin","backgroundColor","border","x","y","qoute","result","padding","color","stocks","slice","mapStateToProps","userStocks","getUserStocksServerError","getUserStockClientError","deleteStockByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid,Divider,Header, Form, Segment, Message, List, Pagination, Button, Icon } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index'\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\n\n\n  \nimport axios from 'axios';\n\nimport UserTodoListItems from './userWatchListItem';\n\n// import requireAuth from '../../hoc/requireAuth';\n\n\nimport { getUserStocks, updateStocksCompletedById, deleteStockById } from '../../actions/stocks';\n\nimport { ADD_STOCKS_ERROR, ADD_STOCK} from '../../actions/types';\n\nclass UserTodoList extends Component {\n\nstate={\n  activePage:1,\n  start:0,\n  end:10\n}\n\n\n// onSubmit = async (formValues,dispatch) => {\n    \n//   const {text} = formValues\n  \n//         try {\n//         await axios.post('/api/user/stock', {text:'ko'}, { headers: { 'authorization': localStorage.getItem('token')}} );\n//         dispatch({ type: ADD_TODO });\n//         this.props.getUserTodos();\n//       } catch (e) {\n//         dispatch({ type: ADD_TODO_ERROR, payload: e });\n//       }\n//     }\n  \n \n\n  onSubmit = async (formValues,dispatch) => {\n    \n\n\n      try {\n      await axios.post('/api/user/stock', formValues, { headers: { 'authorization': localStorage.getItem('token')}} );\n      dispatch({ type: ADD_STOCK });\n      this.props.getUserStocks();\n    } catch (e) {\n      dispatch({ type: ADD_STOCKS_ERROR, payload: e });\n    }\n  }\n\n\naddWinnerStock = () => {\n  alert('hello')\n}\n \n\n  componentDidMount() {\n     this.props.getUserStocks();\n   }\n\n  renderAddTodo = ({ input, meta }) => {\n     return (\n      <>\n\n        <Form.Input\n          {...input}\n          error={ meta.touched && meta.error }\n          fluid\n          autoComplete='off'\n          placeholder='Add your stock'\n          icon='dollar'\n          iconPosition='left'\n\n        />\n      </>\n    )\n  }\n\n\n  handlePageChange = (event, data) => {\n    console.log(data)\n    this.setState({\n      activePage: data.activePage,\n      start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n      end: data.activePage * 10\n    });\n  }\n\n\n  render(props) {\n    console.log(this.props,'dcsdcsds')\n      const {handleSubmit} = this.props;\n      // console.log(this.props.result,'rerfv')\n\n      return(\n           <>\n<Helmet>\n   <style>{'body { background-color: #532f8c ; }'}</style>\n\n         </Helmet>\n              <div style={{margin:'80px 20px 0px 20px'}}>\n\n \n<Segment \nstyle={{backgroundColor:'#222324',border:'1px solid white'}}\n>\n  <div \n  // style={{backgroundColor:'#222222'}}\n  >\n\n     <Grid columns={2} relaxed='very'>\n      <Grid.Column >\n\n     <div className='div-info '>\n\n       <FormContainer \n       graphx={this.props.x}\n      graphy={this.props.y}\n      qoute={this.props.qoute}\n      info={this.props.result}\n      // graphx = {this.props.xvalues} \n      // graphy = {this.props.yvalues} \n      // data= {this.props.result} \n      />   \n      </div>\n\n      </Grid.Column>\n      <Grid.Column> \n          \n\n<div style={{padding:'0 25px 34px 0'}}>\n\n \n       <Header as=\"h2\"  textAlign=\"center\" >\n         <p style={{color:'white'}}>My WatchList </p> \n       </Header>\n          <Form size='large' onSubmit={handleSubmit(this.onSubmit)}   >\n              <Segment  style={{backgroundColor:'#333333'}} >\n                <Field\n                name=\"text\"\n                component={this.renderAddTodo}\n                />\n                <Button\n                type='submit'\n                fluid\n                color='purple'\n                content='add'\n                />\n              </Segment>\n              </Form>\n              <List animated divided selection >\n                <UserTodoListItems \n                stocks={this.props.stocks.slice(this.state.start,this.state.end)}\n                handleUpdate={this.props.updateStocksCompletedById}\n                handleDelete={this.props.deleteStockById}\n                />\n              </List>\n              {/* {\n                this.props.todos.length <= 9 ? \n                null\n                : <Pagination\n                pointing\n                secondary\n                totalPages={Math.ceil(this.props.todos.length / 10)}\n                onPageChange={(event,data)=> this.handlePageChange(event,data)}\n                activePage={this.state.activePage}\n                />\n              }        */}\n</div>\n\n              </Grid.Column>\n    </Grid>\n\n    </div>\n\n  </Segment>\n  </div>\n\n          </>\n      );\n  }\n\n}\n\nfunction mapStateToProps({ stocks: { userStocks, getUserStocksServerError, getUserStockClientError, deleteStockByIdError}}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError,\n  };\n}\n export default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, { getUserStocks,updateStocksCompletedById, deleteStockById,getUserData, getOtherUsers })\n)(UserTodoList);\n\n\n\n\n "]},"metadata":{},"sourceType":"module"}